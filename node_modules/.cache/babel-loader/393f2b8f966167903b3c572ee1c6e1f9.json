{"ast":null,"code":"export const TEST = [{\n  // key = 0\n  ear: 'R',\n  hertz: [{\n    hzLevel: 1000,\n    ableToHear: false,\n    minThres: 100,\n    // set to arbitrary high value so that if hz heard and minThres met then will change\n    numOnlyNo: 0,\n    // number of No clicked before Yes highest possible = 10\n    decibles: [{\n      decible: 15,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 20,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 25,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 30,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 35,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 40,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 45,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 50,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 55,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 60,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 65,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 70,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 75,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }]\n  }, {\n    hzLevel: 2000,\n    ableToHear: false,\n    minThres: 100,\n    // set to arbitrary high value so that if hz heard and minThres met then will change\n    numOnlyNo: 0,\n    // number of No clicked before Yes highest possible = 10\n    decibles: [{\n      decible: 15,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 20,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 25,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 30,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 35,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 40,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 45,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 50,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 55,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 60,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 65,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 70,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 75,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }]\n  }, {\n    hzLevel: 4000,\n    ableToHear: false,\n    minThres: 100,\n    // set to arbitrary high value so that if hz heard and minThres met then will change\n    numOnlyNo: 0,\n    // number of No clicked before Yes highest possible = 10\n    decibles: [{\n      decible: 15,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 20,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 25,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 30,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 35,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 40,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 45,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 50,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 55,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 60,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 65,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 70,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 75,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }]\n  }, {\n    hzLevel: 6000,\n    ableToHear: false,\n    minThres: 100,\n    // set to arbitrary high value so that if hz heard and minThres met then will change\n    numOnlyNo: 0,\n    // number of No clicked before Yes highest possible = 10\n    decibles: [{\n      decible: 15,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 20,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 25,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 30,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 35,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 40,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 45,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 50,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 55,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 60,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 65,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 70,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 75,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }]\n  }, {\n    hzLevel: 1000,\n    ableToHear: false,\n    minThres: 100,\n    // set to arbitrary high value so that if hz heard and minThres met then will change\n    numOnlyNo: 0,\n    // number of No clicked before Yes highest possible = 10\n    decibles: [{\n      decible: 15,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 20,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 25,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 30,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 35,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 40,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 45,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 50,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 55,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 60,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 65,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 70,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 75,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }]\n  }, {\n    hzLevel: 500,\n    ableToHear: false,\n    minThres: 100,\n    // set to arbitrary high value so that if hz heard and minThres met then will change\n    numOnlyNo: 0,\n    // number of No clicked before Yes highest possible = 10\n    decibles: [{\n      decible: 15,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 20,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 25,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 30,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 35,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 40,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 45,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 50,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 55,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 60,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 65,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 70,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 75,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }]\n  }]\n}, {\n  // key = 1\n  ear: 'L',\n  hertz: [{\n    hzLevel: 1000,\n    ableToHear: false,\n    minThres: 100,\n    // set to arbitrary high value so that if hz heard and minThres met then will change\n    numOnlyNo: 0,\n    // number of No clicked before Yes highest possible = 10\n    decibles: [{\n      decible: 15,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 20,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 25,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 30,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 35,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 40,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 45,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 50,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 55,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 60,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 65,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 70,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 75,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }]\n  }, {\n    hzLevel: 2000,\n    ableToHear: false,\n    minThres: 100,\n    // set to arbitrary high value so that if hz heard and minThres met then will change\n    numOnlyNo: 0,\n    // number of No clicked before Yes highest possible = 10\n    decibles: [{\n      decible: 15,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 20,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 25,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 30,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 35,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 40,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 45,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 50,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 55,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 60,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 65,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 70,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 75,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }]\n  }, {\n    hzLevel: 4000,\n    ableToHear: false,\n    minThres: 100,\n    // set to arbitrary high value so that if hz heard and minThres met then will change\n    numOnlyNo: 0,\n    // number of No clicked before Yes highest possible = 10\n    decibles: [{\n      decible: 15,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 20,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 25,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 30,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 35,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 40,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 45,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 50,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 55,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 60,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 65,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 70,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 75,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }]\n  }, {\n    hzLevel: 6000,\n    ableToHear: false,\n    minThres: 100,\n    // set to arbitrary high value so that if hz heard and minThres met then will change\n    numOnlyNo: 0,\n    // number of No clicked before Yes highest possible = 10\n    decibles: [{\n      decible: 15,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 20,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 25,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 30,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 35,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 40,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 45,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 50,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 55,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 60,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 65,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 70,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 75,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }]\n  }, {\n    hzLevel: 500,\n    ableToHear: false,\n    minThres: 100,\n    // set to arbitrary high value so that if hz heard and minThres met then will change\n    numOnlyNo: 0,\n    // number of No clicked before Yes highest possible = 10\n    decibles: [{\n      decible: 15,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 20,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 25,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 30,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 35,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 40,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 45,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 50,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 55,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 60,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 65,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 70,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 75,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }]\n  }]\n}];","map":{"version":3,"sources":["/Users/michelleponting/Desktop/hearingtest/webpage/src/components/hearingtest/hearingscreening/TestConstant.js"],"names":["TEST","ear","hertz","hzLevel","ableToHear","minThres","numOnlyNo","decibles","decible","hasPlayed","numHeard","numMissed"],"mappings":"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","sourcesContent":["export const TEST = [\n    { // key = 0\n        ear: 'R',\n        hertz: [\n            {\n                hzLevel: 1000,\n                ableToHear: false,\n                minThres: 100, // set to arbitrary high value so that if hz heard and minThres met then will change\n                numOnlyNo: 0, // number of No clicked before Yes highest possible = 10\n                decibles: [\n                    { decible: 15, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 20, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 25, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 30, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 35, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 40, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 45, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 50, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 55, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 60, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 65, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 70, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 75, hasPlayed: false, numHeard: 0, numMissed: 0 }\n                ]\n            },\n            {\n                hzLevel: 2000,\n                ableToHear: false,\n                minThres: 100, // set to arbitrary high value so that if hz heard and minThres met then will change\n                numOnlyNo: 0, // number of No clicked before Yes highest possible = 10\n                decibles: [\n                    { decible: 15, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 20, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 25, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 30, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 35, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 40, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 45, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 50, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 55, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 60, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 65, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 70, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 75, hasPlayed: false, numHeard: 0, numMissed: 0 }\n                ]\n            },\n            {\n                hzLevel: 4000,\n                ableToHear: false,\n                minThres: 100, // set to arbitrary high value so that if hz heard and minThres met then will change\n                numOnlyNo: 0, // number of No clicked before Yes highest possible = 10\n                decibles: [\n                    { decible: 15, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 20, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 25, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 30, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 35, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 40, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 45, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 50, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 55, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 60, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 65, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 70, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 75, hasPlayed: false, numHeard: 0, numMissed: 0 }\n                ]\n            },\n            {\n                hzLevel: 6000,\n                ableToHear: false,\n                minThres: 100, // set to arbitrary high value so that if hz heard and minThres met then will change\n                numOnlyNo: 0, // number of No clicked before Yes highest possible = 10\n                decibles: [\n                    { decible: 15, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 20, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 25, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 30, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 35, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 40, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 45, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 50, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 55, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 60, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 65, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 70, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 75, hasPlayed: false, numHeard: 0, numMissed: 0 }\n                ]\n            },\n            {\n                hzLevel: 1000,\n                ableToHear: false,\n                minThres: 100, // set to arbitrary high value so that if hz heard and minThres met then will change\n                numOnlyNo: 0, // number of No clicked before Yes highest possible = 10\n                decibles: [\n                    { decible: 15, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 20, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 25, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 30, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 35, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 40, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 45, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 50, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 55, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 60, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 65, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 70, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 75, hasPlayed: false, numHeard: 0, numMissed: 0 }\n                ]\n            },\n            {\n                hzLevel: 500,\n                ableToHear: false,\n                minThres: 100, // set to arbitrary high value so that if hz heard and minThres met then will change\n                numOnlyNo: 0, // number of No clicked before Yes highest possible = 10\n                decibles: [\n                    { decible: 15, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 20, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 25, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 30, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 35, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 40, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 45, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 50, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 55, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 60, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 65, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 70, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 75, hasPlayed: false, numHeard: 0, numMissed: 0 }\n                ]\n            },\n        ]\n    },\n    { // key = 1\n        ear: 'L',\n        hertz: [\n            {\n                hzLevel: 1000,\n                ableToHear: false,\n                minThres: 100, // set to arbitrary high value so that if hz heard and minThres met then will change\n                numOnlyNo: 0, // number of No clicked before Yes highest possible = 10\n                decibles: [\n                    { decible: 15, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 20, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 25, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 30, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 35, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 40, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 45, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 50, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 55, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 60, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 65, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 70, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 75, hasPlayed: false, numHeard: 0, numMissed: 0 }\n                ]\n            },\n            {\n                hzLevel: 2000,\n                ableToHear: false,\n                minThres: 100, // set to arbitrary high value so that if hz heard and minThres met then will change\n                numOnlyNo: 0, // number of No clicked before Yes highest possible = 10\n                decibles: [\n                    { decible: 15, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 20, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 25, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 30, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 35, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 40, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 45, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 50, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 55, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 60, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 65, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 70, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 75, hasPlayed: false, numHeard: 0, numMissed: 0 }\n                ]\n            },\n            {\n                hzLevel: 4000,\n                ableToHear: false,\n                minThres: 100, // set to arbitrary high value so that if hz heard and minThres met then will change\n                numOnlyNo: 0, // number of No clicked before Yes highest possible = 10\n                decibles: [\n                    { decible: 15, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 20, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 25, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 30, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 35, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 40, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 45, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 50, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 55, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 60, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 65, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 70, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 75, hasPlayed: false, numHeard: 0, numMissed: 0 }\n                ]\n            },\n            {\n                hzLevel: 6000,\n                ableToHear: false,\n                minThres: 100, // set to arbitrary high value so that if hz heard and minThres met then will change\n                numOnlyNo: 0, // number of No clicked before Yes highest possible = 10\n                decibles: [\n                    { decible: 15, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 20, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 25, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 30, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 35, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 40, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 45, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 50, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 55, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 60, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 65, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 70, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 75, hasPlayed: false, numHeard: 0, numMissed: 0 }\n                ]\n            },\n            {\n                hzLevel: 500,\n                ableToHear: false,\n                minThres: 100, // set to arbitrary high value so that if hz heard and minThres met then will change\n                numOnlyNo: 0, // number of No clicked before Yes highest possible = 10\n                decibles: [\n                    { decible: 15, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 20, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 25, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 30, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 35, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 40, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 45, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 50, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 55, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 60, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 65, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 70, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 75, hasPlayed: false, numHeard: 0, numMissed: 0 }\n                ]\n            },\n        ]\n    }\n];"]},"metadata":{},"sourceType":"module"}