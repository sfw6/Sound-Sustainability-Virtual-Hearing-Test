{"ast":null,"code":"var _jsxFileName = \"/Users/michelleponting/Desktop/hearingtest/webpage/src/components/hearingtest/hearingscreening/screening_routes/Audio.js\";\nimport React, { Component } from 'react';\nimport { BoopButton } from './TonePlayback';\nimport { TEST } from './TestConstant';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Audio extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isTestFinished: false,\n      isButtonDisabled: false,\n      test: [],\n      currentEarID: 0,\n      // 0=R starting\n      currentHzID: 0,\n      // 0=1000 starting \n      // (do not need to track dbID since changes based on the yes or no)\n      activeEar: 'R',\n      activeHertz: 1000,\n      activeDecible: 30\n    };\n\n    this.handleDisableBtnWithAudio = () => {\n      setTimeout(() => this.setState({\n        isButtonDisabled: true\n      }), 4000);\n    };\n\n    this.getDecibleID = db => {\n      let id = (db - 15) / 5;\n      return id;\n    };\n\n    this.handleDrop = () => {\n      let earID = this.state.currentEarID;\n      let hzID = this.state.currentHzID;\n      let db = this.state.activeDecible;\n      let dbID = this.getDecibleID(db); // test object copy\n\n      let test = [...this.state.test]; // check if first time hz has played\n      // !yes = update ableToHear for hz level to true\n\n      if (!test[earID].hertz[hzID].ableToHear) {\n        test[earID].hertz[hzID].ableToHear = true;\n      } // check if this db has played before for this hz\n      // !yes = set hasPlayed for decible level to true\n\n\n      if (!test[earID].hertz[hzID].decibles[dbID].hasPlayed) {\n        test[earID].hertz[hzID].decibles[dbID].hasPlayed = true;\n      } // overall things to update\n      // current db numHeard +1\n\n\n      test[earID].hertz[hzID].decibles[dbID].numHeard += 1; // check numHeard + numMissed to tell if repeat or move on\n\n      let numHeard = test[earID].hertz[hzID].decibles[dbID].numHeard;\n      let numMissed = test[earID].hertz[hzID].decibles[dbID].numMissed;\n      let totalPlayed = numHeard + numMissed;\n      let hitRate = Number((numHeard / totalPlayed).toFixed(2)); // if at lowest dB then jump to the next hz\n\n      if (totalPlayed >= 2 && hitRate > .65) {\n        test[earID].hertz[hzID].minThres = db; // set min thres before moving on\n\n        if (earID === 1 && test[earID].hertz[hzID].hzLevel === 500) {\n          this.setState({\n            isTestFinished: true\n          });\n        } else {\n          if (test[earID].hertz[hzID].hzLevel !== 500) {\n            // change hz\n            hzID += 1;\n            db = 30;\n          } else if (test[earID].hertz[hzID].hzLevel === 500) {\n            // change ears\n            earID = 1;\n            hzID = 0;\n            db = 30;\n          }\n        }\n      } else if (db === 20) {\n        // edge case\n        db -= 5;\n      } else if (db - 10 >= 15) {\n        // drop case\n        db -= 10;\n      }\n\n      this.setState({\n        test: test,\n        currentEarID: earID,\n        currentHzID: hzID,\n        activeEar: this.state.test[earID].ear,\n        activeHertz: this.state.test[earID].hertz[hzID].hzLevel,\n        activeDecible: db\n      });\n    };\n\n    this.handleIncrease = () => {\n      let earID = this.state.currentEarID;\n      let hzID = this.state.currentHzID;\n      let db = this.state.activeDecible;\n      let dbID = this.getDecibleID(db); // test object copy\n\n      let test = [...this.state.test]; // overall things to update\n      // current db numMissed +1\n\n      test[earID].hertz[hzID].decibles[dbID].numMissed += 1; // check first time hz played and unable to hear\n      // !hear = update numOnlyNo \n\n      if (!test[earID].hertz[hzID].ableToHear && db < 70) {\n        test[earID].hertz[hzID].numOnlyNo += 1;\n        db += 10;\n      } else if (db === 75) {\n        if (test[earID].hertz[hzID].hzLevel !== 500) {\n          // next hz\n          db = 30;\n          hzID += 1;\n        } else if (earID === 1 && test[earID].hertz[hzID].hzLevel === 500) {\n          // end test\n          this.setState({\n            isTestFinished: true\n          });\n        } else {\n          // switch ears\n          earID = 1;\n          hzID = 0;\n          db = 30;\n        }\n      } else {\n        db += 5;\n      }\n\n      this.setState({\n        test: test,\n        currentEarID: earID,\n        currentHzID: hzID,\n        activeEar: this.state.test[earID].ear,\n        activeHertz: this.state.test[earID].hertz[hzID].hzLevel,\n        activeDecible: db\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      test: TEST\n    });\n  }\n\n  render() {\n    if (this.state.isTestFinished) {\n      return /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"jumbotron bg-transparent\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Hearing Screening Complete!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Something about aknowledging this is a screening blah blah blah\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-check\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-check-input\",\n              type: \"checkbox\",\n              value: \"\",\n              id: \"soundSet50\",\n              onClick: () => {\n                this.props.disable();\n                this.props.passResults(this.state.test);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-check-label\",\n              htmlFor: \"soundSet50\",\n              children: \"I confirm above statement\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container text-center d-flex flex-column\",\n          children: [/*#__PURE__*/_jsxDEV(ToneDisplay, {\n            currentEar: this.state.activeEar // passing current ear\n            ,\n            currentHZ: this.state.activeHertz // passing current hz\n            ,\n            currentDB: this.state.activeDecible // passing current db\n            ,\n            timeOut: this.handleDisableBtnWithAudio\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-weight-light py-2 m-0\",\n            children: \"Do you hear this tone?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(AudioResponse, {\n            drop10: this.handleDrop // passing drop function\n            ,\n            increase5: this.handleIncrease // passing increase function\n            ,\n            isButtonDisabled: this.state.isButtonDisabled\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }, this);\n    }\n  }\n\n}\n\nclass ToneDisplay extends Component {\n  render() {\n    // using the passed hz/db to concat different parts together for file path name\n    let ear = this.props.currentEar;\n    let hz = this.props.currentHZ;\n    let db = this.props.currentDB;\n    let boop = \"play\" + ear + hz + \"Hz\" + db;\n    let title = \"Right Ear - \";\n\n    if (ear === 'L') {\n      title = \"Left Ear - \";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: title + hz + \"Hz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center \",\n        onClick: this.props.handleDisableBtnWithAudio,\n        children: /*#__PURE__*/_jsxDEV(BoopButton, {\n          boop: boop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 10\n    }, this);\n  }\n\n} //{() => { {playL500Hz15}; BoopButton(boop);}}\n\n\nclass AudioResponse extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-inline-flex justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row py-2 mb-4 m-2 align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-dark text-nowrap screening-btn-hear\",\n            disabled: this.props.isButtonDisabled,\n            onClick: this.props.increase5,\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"font-weight-light py-2 m-0\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-hand-thumbs-down text-black\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 65\n              }, this), \" No\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-info text-nowrap screening-btn-hear\",\n            disabled: this.props.isButtonDisabled,\n            onClick: this.props.drop10,\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"font-weight-light py-2 m-0\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-hand-thumbs-up text-black\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 65\n              }, this), \" Yes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nexport default Audio;","map":{"version":3,"sources":["/Users/michelleponting/Desktop/hearingtest/webpage/src/components/hearingtest/hearingscreening/screening_routes/Audio.js"],"names":["React","Component","BoopButton","TEST","Audio","state","isTestFinished","isButtonDisabled","test","currentEarID","currentHzID","activeEar","activeHertz","activeDecible","handleDisableBtnWithAudio","setTimeout","setState","getDecibleID","db","id","handleDrop","earID","hzID","dbID","hertz","ableToHear","decibles","hasPlayed","numHeard","numMissed","totalPlayed","hitRate","Number","toFixed","minThres","hzLevel","ear","handleIncrease","numOnlyNo","componentDidMount","render","props","disable","passResults","ToneDisplay","currentEar","hz","currentHZ","currentDB","boop","title","AudioResponse","increase5","drop10"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport { BoopButton } from './TonePlayback'\nimport { TEST } from './TestConstant';\n\nclass Audio extends Component {\n   state = {\n      isTestFinished: false,\n      isButtonDisabled: false,\n      test: [],\n\n      currentEarID: 0, // 0=R starting\n      currentHzID: 0, // 0=1000 starting \n      // (do not need to track dbID since changes based on the yes or no)\n\n      activeEar: 'R',\n      activeHertz: 1000, \n      activeDecible: 30\n   }\n\n   componentDidMount() {\n      this.setState({ \n         test: TEST\n      });\n   }\n\n   handleDisableBtnWithAudio = () => {\n      setTimeout(() => this.setState({ isButtonDisabled: true }), 4000);\n   }\n\n   // use activeDecible to then pass to this function to get array id\n   getDecibleID = (db) => {\n      let id = (db - 15) / 5;\n      return id;\n   }\n\n   // when you click yes\n   handleDrop = () => {\n      let earID = this.state.currentEarID;\n      let hzID = this.state.currentHzID;\n      let db = this.state.activeDecible;\n      let dbID = this.getDecibleID(db);\n\n      // test object copy\n      let test = [...this.state.test];\n\n      // check if first time hz has played\n         // !yes = update ableToHear for hz level to true\n      if (!test[earID].hertz[hzID].ableToHear) { \n         test[earID].hertz[hzID].ableToHear = true;\n      }\n\n      // check if this db has played before for this hz\n         // !yes = set hasPlayed for decible level to true\n      if (!test[earID].hertz[hzID].decibles[dbID].hasPlayed) {\n         test[earID].hertz[hzID].decibles[dbID].hasPlayed = true;\n      } \n\n      // overall things to update\n         // current db numHeard +1\n      test[earID].hertz[hzID].decibles[dbID].numHeard += 1;\n\n      // check numHeard + numMissed to tell if repeat or move on\n      let numHeard = test[earID].hertz[hzID].decibles[dbID].numHeard;\n      let numMissed = test[earID].hertz[hzID].decibles[dbID].numMissed;\n      let totalPlayed = numHeard + numMissed;\n      let hitRate = Number((numHeard / totalPlayed).toFixed(2));\n\n      // if at lowest dB then jump to the next hz\n      if ( totalPlayed >= 2 && hitRate > .65 ) {\n         test[earID].hertz[hzID].minThres = db; // set min thres before moving on\n\n         if (earID === 1 && test[earID].hertz[hzID].hzLevel === 500 ) {\n            this.setState({\n               isTestFinished: true\n            });\n         } else {\n            if (test[earID].hertz[hzID].hzLevel !== 500 ) { // change hz\n               hzID += 1;\n               db = 30;\n         \n            } else if (test[earID].hertz[hzID].hzLevel === 500) { // change ears\n               earID = 1;\n               hzID = 0;\n               db = 30;\n   \n            } \n         }\n\n      } else if (db === 20) { // edge case\n         db -= 5;\n      } else if (db - 10 >= 15) { // drop case\n         db -= 10;\n      } \n\n      this.setState({\n         test: test,\n         currentEarID: earID,\n         currentHzID: hzID, \n         activeEar: this.state.test[earID].ear,\n         activeHertz: this.state.test[earID].hertz[hzID].hzLevel, \n         activeDecible: db\n      });\n   };\n\n   // when you click no\n   handleIncrease = () => {\n\n      let earID = this.state.currentEarID;\n      let hzID = this.state.currentHzID;\n      let db = this.state.activeDecible;\n      let dbID = this.getDecibleID(db);\n\n      // test object copy\n      let test = [...this.state.test];\n\n      // overall things to update\n         // current db numMissed +1\n      test[earID].hertz[hzID].decibles[dbID].numMissed += 1;\n\n      // check first time hz played and unable to hear\n         // !hear = update numOnlyNo \n      if (!test[earID].hertz[hzID].ableToHear && db < 70) {\n         test[earID].hertz[hzID].numOnlyNo += 1;\n         db += 10;\n      } else if (db === 75) {\n\n         if (test[earID].hertz[hzID].hzLevel !== 500) { // next hz\n            db = 30;\n            hzID += 1;\n\n         } else if (earID === 1 && test[earID].hertz[hzID].hzLevel === 500) { // end test\n            this.setState({\n               isTestFinished: true\n            });\n         } else { // switch ears\n            earID = 1;\n            hzID = 0;\n            db = 30;\n         }\n\n      } else {\n         db += 5;\n      }\n\n      this.setState({\n         test: test,\n         currentEarID: earID,\n         currentHzID: hzID, \n         activeEar: this.state.test[earID].ear,\n         activeHertz: this.state.test[earID].hertz[hzID].hzLevel, \n         activeDecible: db\n      });\n   };\n\n   render() {\n      if (this.state.isTestFinished) {\n         return (\n            <main className=\"container\">\n               <div className=\"jumbotron bg-transparent\">\n                  <h3>Hearing Screening Complete!</h3>\n                  <p>Something about aknowledging this is a screening blah blah blah</p>\n                  <div className=\"form-check\">\n                     <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"soundSet50\" onClick={() => { this.props.disable(); this.props.passResults(this.state.test);}} />\n                     <label className=\"form-check-label\" htmlFor=\"soundSet50\">\n                        I confirm above statement\n                     </label>\n                  </div>\n               </div>\n            </main>\n         );\n      } else {\n         return (\n            <main>\n               <div className=\"container text-center d-flex flex-column\">\n                  <ToneDisplay \n                     currentEar={this.state.activeEar} // passing current ear\n                     currentHZ={this.state.activeHertz} // passing current hz\n                     currentDB={this.state.activeDecible} // passing current db\n                     timeOut={this.handleDisableBtnWithAudio}\n                  />\n                  <h4 className=\"font-weight-light py-2 m-0\">Do you hear this tone?</h4>\n                  <AudioResponse \n                     drop10={this.handleDrop} // passing drop function\n                     increase5={this.handleIncrease} // passing increase function\n                     isButtonDisabled={this.state.isButtonDisabled}\n                  />\n                </div>\n            </main>\n         );\n      }\n   }\n}\n\nclass ToneDisplay extends Component {\n   render() {\n      // using the passed hz/db to concat different parts together for file path name\n      let ear = this.props.currentEar;\n      let hz =  this.props.currentHZ;\n      let db = this.props.currentDB;\n      let boop = (\"play\" + ear + hz + \"Hz\" + db);\n      let title = \"Right Ear - \";\n\n      if (ear === 'L') {\n         title = \"Left Ear - \";\n      }\n\n      return (\n         <div>\n            <h2>\n               {title + hz + \"Hz\"}\n            </h2>\n            <div className=\"d-flex justify-content-center \" onClick={this.props.handleDisableBtnWithAudio}>\n               <BoopButton boop={boop} />\n            </div>\n         </div>\n      );\n   }\n}\n\n\n//{() => { {playL500Hz15}; BoopButton(boop);}}\nclass AudioResponse extends Component {\n   render() {\n      return (\n         <div className=\"d-inline-flex justify-content-center\">\n            <div className=\"row py-2 mb-4 m-2 align-items-center\">\n               <div className=\"col\">\n                  <button type=\"button\" className=\"btn btn-dark text-nowrap screening-btn-hear\" disabled={this.props.isButtonDisabled} onClick={this.props.increase5}> \n                     <h4 className=\"font-weight-light py-2 m-0\"><i className=\"bi bi-hand-thumbs-down text-black\"></i> No</h4>\n                  </button>\n\n               </div>\n               \n               <div className=\"col\">\n\n                  <button type=\"button\" className=\"btn btn-info text-nowrap screening-btn-hear\" disabled={this.props.isButtonDisabled} onClick={this.props.drop10}>\n                     <h4 className=\"font-weight-light py-2 m-0\"><i className=\"bi bi-hand-thumbs-up text-black\"></i> Yes</h4>\n                  </button>\n\n               </div>\n            </div>\n         </div>\n      );\n   }\n}\n\nexport default Audio;"]},"metadata":{},"sourceType":"module"}