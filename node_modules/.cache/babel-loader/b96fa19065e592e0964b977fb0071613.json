{"ast":null,"code":"var _jsxFileName = \"/Users/michelleponting/Desktop/hearingtest/webpage/src/components/hearingtest/hearingscreening/screening_routes/Results.js\";\nimport React, { Component } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst labels = [0, 500, 1000, 2000, 4000, 6000];\n\nclass Results extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          testResults: this.props.testResults\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nfunction LineChart(props) {\n  let level = getLevel(props.testResults);\n  let data = {\n    labels: labels,\n    datasets: [{\n      label: 'Right Ear',\n      data: getData(props.testResults[0].hertz, true),\n      backgroundColor: \"rgba(4, 157, 217, .5)\",\n      borderColor: \"rgba(4, 157, 217, .5)\"\n    }, {\n      label: 'Left Ear',\n      data: getData(props.testResults[1].hertz, false),\n      backgroundColor: \"rgba(102, 255, 173, 0.5)\",\n      borderColor: \"rgba(102, 255, 173, 0.5)\"\n    }, {\n      label: 'Both Ears',\n      backgroundColor: \"rgba(104,205,214,255)\",\n      borderColor: \"rgba(104,205,214,255)\"\n    }]\n  };\n  let options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Your Audiogram'\n      }\n    },\n    scales: {\n      xAxes: {\n        title: {\n          display: true,\n          text: 'Frequency Level (Hz)'\n        }\n      },\n      yAxes: {\n        title: {\n          display: true,\n          text: 'Minimum Decibel You Heard (dB)'\n        },\n        min: 0,\n        max: 80,\n        ticks: {\n          stepsize: 5\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      align: \"center\",\n      children: [\" You have \", level, \" hearing loss\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: data,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 7\n  }, this);\n}\n\n_c = LineChart;\nexport default Results;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"sources":["/Users/michelleponting/Desktop/hearingtest/webpage/src/components/hearingtest/hearingscreening/screening_routes/Results.js"],"names":["React","Component","Line","labels","Results","render","props","testResults","LineChart","level","getLevel","data","datasets","label","getData","hertz","backgroundColor","borderColor","options","responsive","plugins","legend","position","title","display","text","scales","xAxes","yAxes","min","max","ticks","stepsize"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,MAAMC,MAAM,GAAG,CAAC,CAAD,EAAI,GAAJ,EAAS,IAAT,EAAe,IAAf,EAAqB,IAArB,EAA2B,IAA3B,CAAf;;AAEA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAC7BI,EAAAA,MAAM,GAAG;AACN,wBACG;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA,6BACG;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACG,QAAC,SAAD;AAAW,UAAA,WAAW,EAAE,KAAKC,KAAL,CAAWC;AAAnC;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YADH;AAOF;;AAT4B;;AAYhC,SAASC,SAAT,CAAmBF,KAAnB,EAA0B;AACvB,MAAIG,KAAK,GAAGC,QAAQ,CAACJ,KAAK,CAACC,WAAP,CAApB;AACA,MAAII,IAAI,GAAG;AACRR,IAAAA,MAAM,EAAEA,MADA;AAERS,IAAAA,QAAQ,EAAE,CACP;AACGC,MAAAA,KAAK,EAAE,WADV;AAEGF,MAAAA,IAAI,EAAEG,OAAO,CAACR,KAAK,CAACC,WAAN,CAAkB,CAAlB,EAAqBQ,KAAtB,EAA6B,IAA7B,CAFhB;AAGGC,MAAAA,eAAe,EAAE,uBAHpB;AAIGC,MAAAA,WAAW,EAAE;AAJhB,KADO,EAOP;AACGJ,MAAAA,KAAK,EAAE,UADV;AAEGF,MAAAA,IAAI,EAAEG,OAAO,CAACR,KAAK,CAACC,WAAN,CAAkB,CAAlB,EAAqBQ,KAAtB,EAA6B,KAA7B,CAFhB;AAGGC,MAAAA,eAAe,EAAE,0BAHpB;AAIGC,MAAAA,WAAW,EAAE;AAJhB,KAPO,EAaP;AACGJ,MAAAA,KAAK,EAAE,WADV;AAEGG,MAAAA,eAAe,EAAE,uBAFpB;AAGGC,MAAAA,WAAW,EAAE;AAHhB,KAbO;AAFF,GAAX;AAuBA,MAAIC,OAAO,GAAG;AAEXC,IAAAA,UAAU,EAAE,IAFD;AAGXC,IAAAA,OAAO,EAAE;AACNC,MAAAA,MAAM,EAAE;AACLC,QAAAA,QAAQ,EAAE;AADL,OADF;AAINC,MAAAA,KAAK,EAAE;AACJC,QAAAA,OAAO,EAAE,IADL;AAEJC,QAAAA,IAAI,EAAE;AAFF;AAJD,KAHE;AAYXC,IAAAA,MAAM,EAAE;AACLC,MAAAA,KAAK,EAAE;AACJJ,QAAAA,KAAK,EAAE;AACJC,UAAAA,OAAO,EAAE,IADL;AAEJC,UAAAA,IAAI,EAAE;AAFF;AADH,OADF;AAOLG,MAAAA,KAAK,EAAE;AACJL,QAAAA,KAAK,EAAE;AACJC,UAAAA,OAAO,EAAE,IADL;AAEJC,UAAAA,IAAI,EAAE;AAFF,SADH;AAKJI,QAAAA,GAAG,EAAE,CALD;AAMJC,QAAAA,GAAG,EAAE,EAND;AAOJC,QAAAA,KAAK,EAAE;AACJC,UAAAA,QAAQ,EAAE;AADN;AAPH;AAPF;AAZG,GAAd;AAkCA,sBACG;AAAA,4BACG;AAAI,MAAA,KAAK,EAAC,QAAV;AAAA,+BAA8BvB,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,eAGG;AAAA,6BACG,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEE,IAAZ;AAAkB,QAAA,OAAO,EAAEO;AAA3B;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YAHH;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AASF;;KApEQV,S;AAuET,eAAeJ,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Line } from 'react-chartjs-2';\n\nconst labels = [0, 500, 1000, 2000, 4000, 6000];\n\nclass Results extends Component {\n   render() {\n      return (\n         <main className=\"container\">\n            <div className=\"row\">\n               <LineChart testResults={this.props.testResults} />\n            </div>\n         </main>\n      );\n   }\n}\n\nfunction LineChart(props) {\n   let level = getLevel(props.testResults);\n   let data = {\n      labels: labels,\n      datasets: [\n         {\n            label: 'Right Ear',\n            data: getData(props.testResults[0].hertz, true),\n            backgroundColor: \"rgba(4, 157, 217, .5)\",\n            borderColor: \"rgba(4, 157, 217, .5)\"\n         },\n         {\n            label: 'Left Ear',\n            data: getData(props.testResults[1].hertz, false),\n            backgroundColor: \"rgba(102, 255, 173, 0.5)\",\n            borderColor: \"rgba(102, 255, 173, 0.5)\"\n         },\n         {\n            label: 'Both Ears',\n            backgroundColor: \"rgba(104,205,214,255)\",\n            borderColor: \"rgba(104,205,214,255)\"\n         }\n      ]\n   };\n\n   let options = {\n\n      responsive: true,\n      plugins: {\n         legend: {\n            position: 'top',\n         },\n         title: {\n            display: true,\n            text: 'Your Audiogram'\n         }\n      },\n      scales: {\n         xAxes: {\n            title: {\n               display: true,\n               text: 'Frequency Level (Hz)'\n            }\n         },\n         yAxes: {\n            title: {\n               display: true,\n               text: 'Minimum Decibel You Heard (dB)'\n            },\n            min: 0,\n            max: 80,\n            ticks: {\n               stepsize: 5\n            }\n         }\n      }\n\n   };\n\n   return (\n      <div>\n         <h2 align='center'> You have {level} hearing loss</h2>\n\n         <div>\n            <Line data={data} options={options} />\n         </div>\n      </div>\n   );\n}\n\n\nexport default Results;"]},"metadata":{},"sourceType":"module"}