{"ast":null,"code":"var _jsxFileName = \"/Users/michelleponting/Desktop/hearingtest/webpage/src/components/hearingscreening/Screening.js\";\nimport React, { Component } from 'react';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\nimport Audio from './screening_routes/audio';\nimport Calibration from './screening_routes/calibration';\nimport Instructions from './screening_routes/instructions';\nimport Results from './screening_routes/results';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PAGES = [{\n  id: '0',\n  comp: {\n    Instructions\n  },\n  path: \"/instructions\",\n  now: \"0\"\n}, {\n  id: '1',\n  comp: {\n    Calibration\n  },\n  path: \"/calibration\",\n  now: \"33\"\n}, {\n  id: '2',\n  comp: {\n    Audio\n  },\n  path: \"/audio\",\n  now: \"66\"\n}, {\n  id: '3',\n  comp: {\n    Results\n  },\n  path: \"/results\",\n  now: \"100\"\n}];\nconst data = [{\n  id: '1',\n  title: 'calibration',\n  stagePercent: '33',\n  url: 'https://placeimg.com/150/150/nature/sepia'\n}, {\n  id: '2',\n  title: 'audio',\n  stagePercent: '66',\n  url: 'https://placeimg.com/150/150/animals/sepia'\n}, {\n  id: '3',\n  title: 'results',\n  stagePercent: '100',\n  url: 'https://placeimg.com/150/150/tech/sepia'\n}];\n/*\n    Adapted from :ReactJS: Dynamic Previous/Next Buttons\n    desc: Retrieve previous & next titles and return them as component props.\n    author: alpha1337\n    https://codesandbox.io/s/rk360yxz?file=/index.js:3135-3772\n*/\n\nclass AudioScreening extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      projects: [],\n      activeStage: '',\n      modalTitle: '',\n      modalDescription: ''\n    };\n\n    this.handleModalOpen = idx => {\n      this.setState({\n        activeStage: idx,\n        modalTitle: this.state.projects[idx].title,\n        modalDescription: this.state.projects[idx].stagePercent\n      });\n    };\n\n    this.handleModalClose = () => {\n      this.setState({\n        activeStage: ''\n      });\n    };\n\n    this.handleNextProject = () => {\n      var arr = this.state.projects.length;\n      var idx = this.state.activeStage + 1;\n      var idx = idx % arr;\n      this.setState({\n        activeStage: idx,\n        modalTitle: this.state.projects[idx].title,\n        modalDescription: this.state.projects[idx].stagePercent\n      });\n    };\n\n    this.handlePrevProject = () => {\n      var arr = this.state.projects.length;\n      var idx = this.state.activeStage;\n      console.log('initial: ' + idx);\n\n      if (idx === 0) {\n        var idx = arr - 1;\n      } else {\n        var idx = idx - 1;\n      }\n\n      console.log('updated: ' + idx);\n      this.setState({\n        activeStage: idx,\n        modalTitle: this.state.projects[idx].title,\n        modalDescription: this.state.projects[idx].stagePercent\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      projects: data\n    });\n  }\n\n  render() {\n    console.log(this.state);\n\n    function nextStage(idx, arr) {\n      var i = idx + 1;\n      var i = i % arr.length;\n      return arr[i].title;\n    }\n\n    function prevStage(idx, arr) {\n      if (idx === 0) {\n        var i = arr.length - 1;\n      } else {\n        var i = idx - 1;\n      }\n\n      return arr[i].title;\n    }\n\n    const projectComponents = data.map((data, idx, arr) => /*#__PURE__*/_jsxDEV(Project, {\n      index: idx,\n      title: data.title,\n      url: data.url,\n      onModalOpen: this.handleModalOpen\n    }, 'project-' + data.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this));\n\n    if (this.state.activeStage === '') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Progress, {\n          percentage: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Click on a project below to view details.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), projectComponents]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Progress, {\n          percentage: \"33\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          title: this.state.modalTitle,\n          stagePercent: this.state.modalDescription,\n          previousStage: prevStage(this.state.activeStage, data),\n          nextStage: nextStage(this.state.activeStage, data),\n          onModalClose: this.handleModalClose,\n          onNext: this.handleNextProject,\n          onPrev: this.handlePrevProject\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nclass Modal extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: this.props.stagePercent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: this.props.onPrev,\n        children: \"back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary\",\n        onClick: this.props.onModalClose,\n        children: \"restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: this.props.onNext,\n        children: \"next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Project extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: this.props.onModalOpen.bind(this, this.props.index),\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Breadcrumbs extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"nav\", {\n      \"aria-label\": \"breadcrumb\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"breadcrumb bg-transparent font-weight-light\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"text-danger\",\n            href: \"/\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"text-danger\",\n            href: \"/screeninghome\",\n            children: \"Screening Info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item active\",\n          \"aria-current\": \"page\",\n          children: \"Screening\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Progress extends Component {\n  render() {\n    // let now = this.props.percentage.map((playlistInfo) => {\n    //     return (playlistInfo.now);\n    // });\n    let now = this.props.percentage;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"font-weight-light\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"font-weight-light mb-1\",\n        children: \"Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        now: now,\n        label: `${now}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AudioScreening;","map":{"version":3,"sources":["/Users/michelleponting/Desktop/hearingtest/webpage/src/components/hearingscreening/Screening.js"],"names":["React","Component","ProgressBar","Audio","Calibration","Instructions","Results","PAGES","id","comp","path","now","data","title","stagePercent","url","AudioScreening","state","projects","activeStage","modalTitle","modalDescription","handleModalOpen","idx","setState","handleModalClose","handleNextProject","arr","length","handlePrevProject","console","log","componentDidMount","render","nextStage","i","prevStage","projectComponents","map","Modal","props","onPrev","onModalClose","onNext","Project","onModalOpen","bind","index","Breadcrumbs","Progress","percentage"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport ProgressBar from 'react-bootstrap/ProgressBar'\n\nimport Audio from './screening_routes/audio';\nimport Calibration from './screening_routes/calibration';\nimport Instructions from './screening_routes/instructions';\nimport Results from './screening_routes/results';\n\nconst PAGES = [\n    { id:'0', comp:{Instructions}, path: \"/instructions\", now:\"0\" },\n    { id:'1', comp:{Calibration}, path: \"/calibration\", now:\"33\" },\n    { id:'2', comp:{Audio}, path: \"/audio\", now:\"66\" },\n    { id:'3', comp:{Results}, path: \"/results\", now:\"100\" }\n];\n\nconst data = [\n    {\n      id: '1',\n      title: 'calibration',\n      stagePercent: '33',\n      url: 'https://placeimg.com/150/150/nature/sepia'\n    },\n    {\n      id: '2',\n      title: 'audio',\n      stagePercent: '66',\n      url: 'https://placeimg.com/150/150/animals/sepia'\n    },\n    {\n      id: '3',\n      title: 'results',\n      stagePercent: '100',\n      url: 'https://placeimg.com/150/150/tech/sepia'\n    },\n  ];\n\n/*\n    Adapted from :ReactJS: Dynamic Previous/Next Buttons\n    desc: Retrieve previous & next titles and return them as component props.\n    author: alpha1337\n    https://codesandbox.io/s/rk360yxz?file=/index.js:3135-3772\n*/\nclass AudioScreening extends Component {\n    state = {\n        projects: [],\n        activeStage: '',\n        modalTitle: '',\n        modalDescription: ''\n    }\n\n    componentDidMount() {\n        this.setState({ projects: data });\n    }\n\n    handleModalOpen = (idx) => {\n        this.setState({\n            activeStage: idx,\n            modalTitle: this.state.projects[idx].title,\n            modalDescription: this.state.projects[idx].stagePercent\n        });\n    };\n\n    handleModalClose = () => {\n        this.setState({\n            activeStage: ''\n        });\n    };\n\n    handleNextProject = () => {\n\n        var arr = this.state.projects.length;\n        var idx = this.state.activeStage + 1;\n        var idx = idx % arr;\n\n        this.setState({\n            activeStage: idx,\n            modalTitle: this.state.projects[idx].title,\n            modalDescription: this.state.projects[idx].stagePercent\n        });\n    }\n\n    handlePrevProject = () => {\n        var arr = this.state.projects.length;\n        var idx = this.state.activeStage;\n\n        console.log('initial: ' + idx);\n\n        if (idx === 0) {\n            var idx = arr - 1;\n        } else {\n            var idx = idx - 1;\n        }\n\n        console.log('updated: ' + idx);\n\n        this.setState({\n            activeStage: idx,\n            modalTitle: this.state.projects[idx].title,\n            modalDescription: this.state.projects[idx].stagePercent\n        });\n    }\n\n\n    render() {\n        console.log(this.state)\n\n        function nextStage(idx, arr) {\n            var i = idx + 1;\n            var i = i % arr.length;\n            return arr[i].title;\n        }\n\n        function prevStage(idx, arr) {\n            if (idx === 0) {\n                var i = arr.length - 1;\n            } else {\n                var i = idx - 1;\n            }\n            return arr[i].title;\n        }\n\n        const projectComponents = data.map((data, idx, arr) =>\n            <Project\n                key={'project-' + data.id}\n                index={idx}\n                title={data.title}\n                url={data.url}\n                onModalOpen={this.handleModalOpen}\n            />,\n        );\n\n        if (this.state.activeStage === '') {\n            return (\n                <div>\n                    <Breadcrumbs />\n                    <Progress percentage=\"0\"></Progress>\n                    <Instructions />\n                    <h3>Click on a project below to view details.</h3>\n                    {projectComponents}\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <Breadcrumbs />\n                    <Progress percentage=\"33\"></Progress>\n                    <Modal\n                        title={this.state.modalTitle}\n                        stagePercent={this.state.modalDescription}\n                        previousStage={prevStage(this.state.activeStage, data)}\n                        nextStage={nextStage(this.state.activeStage, data)}\n                        onModalClose={this.handleModalClose}\n                        onNext={this.handleNextProject}\n                        onPrev={this.handlePrevProject}\n                    />\n                </div>\n            );\n        }\n    }\n}\n\n\nclass Modal extends React.Component {\n    render() {\n        return (\n            <div>\n                <h1>{this.props.title}</h1>\n                <h3>{this.props.stagePercent}</h3>\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.props.onPrev}>back</button>\n                <button type=\"button\" className=\"btn btn-secondary\" onClick={this.props.onModalClose}>restart</button>\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.props.onNext}>next</button>\n            </div>\n        );\n    }\n}\n\nclass Project extends React.Component {\n    render() {\n        return (\n            <div onClick={this.props.onModalOpen.bind(this, this.props.index)}>\n                <button type=\"button\" className=\"btn btn-secondary\">Next</button>\n            </div>\n        );\n    }\n}\n\nclass Breadcrumbs extends Component {\n    render() {\n        return (\n            <nav aria-label=\"breadcrumb\">\n                <ol className=\"breadcrumb bg-transparent font-weight-light\">\n                    <li className=\"breadcrumb-item\"><a className=\"text-danger\" href=\"/\">Home</a></li>\n                    <li className=\"breadcrumb-item\"><a className=\"text-danger\" href=\"/screeninghome\">Screening Info</a></li>\n                    <li className=\"breadcrumb-item active\" aria-current=\"page\">Screening</li>\n                </ol>\n            </nav>\n        );\n    }\n}\n\nclass Progress extends Component {\n    render() {\n        // let now = this.props.percentage.map((playlistInfo) => {\n        //     return (playlistInfo.now);\n        // });\n\n        let now = this.props.percentage\n\n        return (\n            <div className=\"font-weight-light\">\n                <h5 className=\"font-weight-light mb-1\">Progress</h5> \n                <ProgressBar now={now} label={`${now}%`} />\n            </div>\n        );\n    }\n}\n\nexport default AudioScreening;"]},"metadata":{},"sourceType":"module"}