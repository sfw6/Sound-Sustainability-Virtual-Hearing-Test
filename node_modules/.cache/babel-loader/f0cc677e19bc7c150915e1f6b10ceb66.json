{"ast":null,"code":"var _jsxFileName = \"/Users/michelleponting/Desktop/hearingtest/webpage/src/components/hearingtest/hearingscreening/screening_routes/Audio.js\";\nimport React, { Component } from 'react';\nimport { TEST } from './TestConstant.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tones = [{\n  hertz: 1000\n}, {\n  hertz: 2000\n}, {\n  hertz: 4000\n}, {\n  hertz: 6000\n}, {\n  hertz: 1000\n}, {\n  hertz: 500\n}];\nconst pathStart = \"audio_tones/\";\nconst pathEnd = \".mp3\";\n\nclass Audio extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tones: [],\n      test: [],\n      testEarNum: 0,\n      // 0=R starting\n      testHzXNum: 0,\n      // 0=1000 starting\n      testDbXNum: 0,\n      // 0=20 starting\n      activeEar: 'R',\n      activeHertz: 1000,\n      activeDecible: 30,\n      maxDecible: 20,\n      minDecible: 75\n    };\n\n    this.handleDrop = () => {\n      let dropHzID = this.state.testHzXNum;\n      let db = this.state.activeDecible;\n\n      if (this.state.minDecible > db) {\n        this.setState({\n          minDecible: db\n        });\n      }\n\n      if (this.state.maxDecible < db) {\n        this.setState({\n          maxDecible: db\n        });\n      } // if at lowest dB then jump to the next hz\n\n\n      if (db - 10 < 20) {\n        if (db === 25) {\n          // if case where db is at 25 so can still go down but not by 10\n          console.log(\"was at 25 now dropping 5dB\");\n          db -= 5;\n          this.setState({\n            activeDecible: db\n          });\n        } else if (dropHzID === 5) {\n          // case where cannot go down any lower and cannot go to a higher hz\n          console.log(\"would break to go any lower\");\n        } else {\n          console.log(\"next hz\");\n          dropHzID += 1;\n          this.setState({\n            testHzXNum: dropHzID,\n            activeHertz: this.state.tones[dropHzID].hertz,\n            activeDecible: 30 // for testing purposes it is set here\n\n          });\n        }\n      } else {\n        // drop by 10 db\n        console.log(\"dropping 10dB\");\n        db -= 10;\n        this.setState({\n          activeDecible: db\n        });\n      }\n    };\n\n    this.handleIncrease = () => {\n      let upHzID = this.state.testHzXNum;\n      let db = this.state.activeDecible; // if at highest dB then jump to the next hz\n\n      if (db === 75) {\n        if (upHzID === 5) {\n          // case where cannot go up any higher and cannot go to a higher hz\n          console.log(\"now at highest db for highest hz\");\n        } else {\n          console.log(\"next hz\");\n          upHzID += 1;\n          this.setState({\n            testHzXNum: upHzID,\n            activeHertz: this.state.tones[upHzID].hertz,\n            activeDecible: 30 // for testing purposes it is set here\n\n          });\n        }\n      } else {\n        // go up by 5db\n        console.log(\"up by 5dB\");\n        db += 5;\n        this.setState({\n          activeDecible: db\n        });\n      }\n    };\n\n    this.handleReplay = () => {\n      console.log(\"reset test\");\n      this.setState({\n        test: test,\n        activeHzID: 0,\n        // for testing purposes it is set here\n        activeHertz: 1000,\n        // for testing purposes it is set here\n        activeDecible: 30,\n        // for testing purposes it is set here\n        maxDecible: 20,\n        minDecible: 75\n      });\n    };\n\n    this.debuggin = () => {\n      console.log(this.state.test[0].hertz[0].minThres);\n      let test = [...this.state.test]; // 1. Make a shallow copy of the object (entire state object)\n\n      test[0].hertz[0].minThres += 100; // 2. Replace the property you're intested in\n\n      this.setState({\n        test\n      }, // 3. Set the state to our new copy\n      () => console.log(this.state.test[0].hertz[0].minThres));\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      tones: tones,\n      test: TEST\n    });\n  } // when you click yes\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container text-center d-flex flex-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-secondary\",\n          onClick: this.debuggin,\n          children: \"test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(ToneDisplay, {\n          currentEar: this.state.activeEar // passing current ear\n          ,\n          currentHZ: this.state.activeHertz // passing current hz\n          ,\n          currentDB: this.state.activeDecible // passing current db\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"font-weight-light py-2 m-0\",\n          children: \"Do you hear this tone?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(AudioResponse, {\n          drop10: this.handleDrop // passing drop function\n          ,\n          increase5: this.handleIncrease // passing increase function\n          ,\n          replay: this.handleReplay // passing replay function (currently resetting hz/db)\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-danger\",\n          onClick: this.props.disable,\n          children: \"(placeholder) activate next button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass ToneDisplay extends Component {\n  render() {\n    // using the passed hz/db to concat different parts together for file path name\n    let ear = this.props.currentEar;\n    let hz = \"Hz\" + this.props.currentHZ;\n    let db = \"dB\" + this.props.currentDB;\n    console.log(hz + db);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: ear + \" \" + hz + \" \" + db\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: pathStart + ear + hz + db + pathEnd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass AudioResponse extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-inline-flex justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row py-2 mb-4 m-2 align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-dark text-nowrap screening-btn-hear\",\n            onClick: this.props.increase5,\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-hand-thumbs-down text-black\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 22\n            }, this), \" No\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn\",\n          onClick: this.props.replay,\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"mb-0\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-arrow-repeat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-info text-nowrap screening-btn-hear\",\n            onClick: this.props.drop10,\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-hand-thumbs-up text-black\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 22\n            }, this), \" Yes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nexport default Audio;","map":{"version":3,"sources":["/Users/michelleponting/Desktop/hearingtest/webpage/src/components/hearingtest/hearingscreening/screening_routes/Audio.js"],"names":["React","Component","TEST","tones","hertz","pathStart","pathEnd","Audio","state","test","testEarNum","testHzXNum","testDbXNum","activeEar","activeHertz","activeDecible","maxDecible","minDecible","handleDrop","dropHzID","db","setState","console","log","handleIncrease","upHzID","handleReplay","activeHzID","debuggin","minThres","componentDidMount","render","props","disable","ToneDisplay","ear","currentEar","hz","currentHZ","currentDB","AudioResponse","increase5","replay","drop10"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport { TEST } from './TestConstant.js'\n\nconst tones = [\n   { hertz: 1000 },\n   { hertz: 2000 },\n   { hertz: 4000 },\n   { hertz: 6000 },\n   { hertz: 1000 },\n   { hertz: 500 }\n];\n\nconst pathStart = \"audio_tones/\";\nconst pathEnd = \".mp3\";\n\nclass Audio extends Component {\n   state = {\n      tones: [],\n      test: [],\n\n      testEarNum: 0, // 0=R starting\n      testHzXNum: 0, // 0=1000 starting\n      testDbXNum: 0, // 0=20 starting\n\n      activeEar: 'R',\n      activeHertz: 1000, \n      activeDecible: 30, \n\n      maxDecible: 20,\n      minDecible: 75\n   }\n\n   componentDidMount() {\n      this.setState({ \n         tones: tones,\n         test: TEST\n      });\n   }\n\n   // when you click yes\n   handleDrop = () => {\n      let dropHzID = this.state.testHzXNum;\n      let db = this.state.activeDecible;\n\n      if (this.state.minDecible > db) {\n         this.setState({\n            minDecible: db\n         });\n      }\n      if (this.state.maxDecible < db) {\n         this.setState({\n            maxDecible: db\n         });\n      }\n\n      // if at lowest dB then jump to the next hz\n      if (db - 10 < 20) {\n         \n         if (db === 25) { // if case where db is at 25 so can still go down but not by 10\n            console.log(\"was at 25 now dropping 5dB\");\n            db -= 5;\n            this.setState({\n               activeDecible: db\n            });\n         } else if (dropHzID === 5) { // case where cannot go down any lower and cannot go to a higher hz\n            console.log(\"would break to go any lower\");\n         } else {\n            console.log(\"next hz\");\n            dropHzID += 1;\n            this.setState({\n               testHzXNum: dropHzID, \n               activeHertz: this.state.tones[dropHzID].hertz, \n               activeDecible: 30 // for testing purposes it is set here\n            });\n         }\n      } else { // drop by 10 db\n         console.log(\"dropping 10dB\");\n         db -= 10;\n         this.setState({\n            activeDecible: db\n         });\n      }\n   };\n\n   // when you click no\n   handleIncrease = () => {\n      let upHzID = this.state.testHzXNum;\n      let db = this.state.activeDecible;\n\n      // if at highest dB then jump to the next hz\n      if (db === 75) {\n         \n         if (upHzID === 5) { // case where cannot go up any higher and cannot go to a higher hz\n            console.log(\"now at highest db for highest hz\")\n         } else {\n            console.log(\"next hz\")\n            upHzID += 1;\n            this.setState({\n               testHzXNum: upHzID, \n               activeHertz: this.state.tones[upHzID].hertz, \n               activeDecible: 30 // for testing purposes it is set here\n            });\n         }\n      } else { // go up by 5db\n         console.log(\"up by 5dB\")\n         db += 5;\n         this.setState({\n            activeDecible: db\n         });\n      }\n   };\n\n   // currently only restarting at 500hz and 20 db\n   handleReplay = () => {\n      console.log(\"reset test\")\n      this.setState({\n         test: test,\n         activeHzID: 0, // for testing purposes it is set here\n         activeHertz: 1000, // for testing purposes it is set here\n         activeDecible: 30, // for testing purposes it is set here\n         maxDecible: 20,\n         minDecible: 75\n      });\n   };\n\n   // able to go down and manipulate the this.state.test object however deep need to\n   debuggin = () => {\n      console.log(this.state.test[0].hertz[0].minThres)\n      \n      let test = [...this.state.test]; // 1. Make a shallow copy of the object (entire state object)\n      \n      test[0].hertz[0].minThres += 100; // 2. Replace the property you're intested in\n            \n      this.setState({test}, // 3. Set the state to our new copy\n         () => console.log(this.state.test[0].hertz[0].minThres)\n         )\n   }\n\n   render() {\n      return (\n         <main>\n            <div className=\"container text-center d-flex flex-column\">\n               <button type=\"button\" className=\"btn btn-secondary\" onClick={this.debuggin}>test</button>\n               <ToneDisplay \n                  currentEar={this.state.activeEar} // passing current ear\n                  currentHZ={this.state.activeHertz} // passing current hz\n                  currentDB={this.state.activeDecible} // passing current db\n               />\n               <h4 className=\"font-weight-light py-2 m-0\">Do you hear this tone?</h4>\n               <AudioResponse \n                  drop10={this.handleDrop} // passing drop function\n                  increase5={this.handleIncrease} // passing increase function\n                  replay={this.handleReplay} // passing replay function (currently resetting hz/db)\n               />\n               {/* placeholder button for now */}\n               <button type=\"button\" className=\"btn btn-danger\" onClick={this.props.disable}>(placeholder) activate next button</button>\n             </div>\n         </main>\n      );\n   }\n}\n\nclass ToneDisplay extends Component {\n   render() {\n      // using the passed hz/db to concat different parts together for file path name\n      let ear = this.props.currentEar;\n      let hz = \"Hz\" + this.props.currentHZ;\n      let db = \"dB\" + this.props.currentDB;\n      console.log(hz + db);\n\n      return (\n         <div>\n            <h1>\n               {ear + \" \" + hz + \" \" + db}\n            </h1>\n            <p>{pathStart + ear + hz + db + pathEnd}</p>\n         </div>\n      );\n   }\n}\n\nclass AudioResponse extends Component {\n   render() {\n      return (\n         <div className=\"d-inline-flex justify-content-center\">\n            <div className=\"row py-2 mb-4 m-2 align-items-center\">\n               <div className=\"col\">\n\n                  {/* onClick= functionality traces back to main component to run function */}\n                  <button type=\"button\" className=\"btn btn-dark text-nowrap screening-btn-hear\" onClick={this.props.increase5}> \n                     <i className=\"bi bi-hand-thumbs-down text-black\"></i> No\n                  </button>\n\n               </div>\n               <button type=\"button\" className=\"btn\" onClick={this.props.replay}>\n                  <h3 className=\"mb-0\"><i className=\"bi bi-arrow-repeat\"></i></h3>\n               </button>\n               <div className=\"col\">\n\n                  <button type=\"button\" className=\"btn btn-info text-nowrap screening-btn-hear\" onClick={this.props.drop10}>\n                     <i className=\"bi bi-hand-thumbs-up text-black\"></i> Yes\n                  </button>\n\n               </div>\n            </div>\n         </div>\n      );\n   }\n}\n\nexport default Audio;"]},"metadata":{},"sourceType":"module"}