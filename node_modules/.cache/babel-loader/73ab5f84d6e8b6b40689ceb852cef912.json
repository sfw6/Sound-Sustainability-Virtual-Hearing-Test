{"ast":null,"code":"import _toConsumableArray from\"/Users/michelleponting/Desktop/Sound-Sustainability-Virtual-Hearing-Test/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/Users/michelleponting/Desktop/Sound-Sustainability-Virtual-Hearing-Test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/michelleponting/Desktop/Sound-Sustainability-Virtual-Hearing-Test/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/michelleponting/Desktop/Sound-Sustainability-Virtual-Hearing-Test/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/michelleponting/Desktop/Sound-Sustainability-Virtual-Hearing-Test/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{UncontrolledPopover,PopoverBody}from'reactstrap';import{BoopButton}from'./TonePlayback';import{TEST}from'./TestConstant';// cp\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Audio=/*#__PURE__*/function(_Component){_inherits(Audio,_Component);var _super=_createSuper(Audio);function Audio(){var _this;_classCallCheck(this,Audio);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={isTestFinished:false,disableYesNo:false,// debug set false\nisButtonDisabled:false,test:[],currentEarID:0,// 0=R starting\ncurrentHzID:0,// 0=1000 starting \n// (do not need to track dbID since changes based on the yes or no)\nactiveEar:'R',activeHertz:1000,activeDecible:30};_this.handleDisableBtnUntilTone=function(){_this.setState({disableYesNo:false});};_this.handleDisableBtnWithAudio=function(){_this.setState({// isButtonDisabled: true\n});// **** here's the timeout ****\nsetTimeout(function(){return _this.setState({isButtonDisabled:false});},3500);};_this.getDecibleID=function(db){var id=(db-15)/5;return id;};_this.handleDrop=function(){var earID=_this.state.currentEarID;var hzID=_this.state.currentHzID;var db=_this.state.activeDecible;var dbID=_this.getDecibleID(db);// test object copy\nvar test=_toConsumableArray(_this.state.test);// check if first time hz has played\n// !yes = update ableToHear for hz level to true\nif(!test[earID].hertz[hzID].ableToHear){test[earID].hertz[hzID].ableToHear=true;}// check if this db has played before for this hz\n// !yes = set hasPlayed for decible level to true\nif(!test[earID].hertz[hzID].decibles[dbID].hasPlayed){test[earID].hertz[hzID].decibles[dbID].hasPlayed=true;}// overall things to update\n// current db numHeard +1\ntest[earID].hertz[hzID].decibles[dbID].numHeard+=1;// check numHeard + numMissed to tell if repeat or move on\nvar numHeard=test[earID].hertz[hzID].decibles[dbID].numHeard;var numMissed=test[earID].hertz[hzID].decibles[dbID].numMissed;var totalPlayed=numHeard+numMissed;var hitRate=Number((numHeard/totalPlayed).toFixed(2));// if at lowest dB then jump to the next hz\nif(totalPlayed>=2&&hitRate>.65){test[earID].hertz[hzID].minThres=db;// set min thres before moving on\nif(earID===1&&test[earID].hertz[hzID].hzLevel===500){_this.setState({isTestFinished:true});}else{if(test[earID].hertz[hzID].hzLevel!==500){// change hz\nhzID+=1;db=30;}else if(test[earID].hertz[hzID].hzLevel===500){// change ears\nearID=1;hzID=0;db=30;}}}else if(db===20){// edge case\ndb-=5;}else if(db-10>=15){// drop case\ndb-=10;}_this.setState({test:test,currentEarID:earID,currentHzID:hzID,activeEar:_this.state.test[earID].ear,activeHertz:_this.state.test[earID].hertz[hzID].hzLevel,activeDecible:db// disableYesNo: true\n});};_this.handleIncrease=function(){var earID=_this.state.currentEarID;var hzID=_this.state.currentHzID;var db=_this.state.activeDecible;var dbID=_this.getDecibleID(db);// test object copy\nvar test=_toConsumableArray(_this.state.test);// overall things to update\n// current db numMissed +1\ntest[earID].hertz[hzID].decibles[dbID].numMissed+=1;// check first time hz played and unable to hear\n// !hear = update numOnlyNo \nif(!test[earID].hertz[hzID].ableToHear&&db<70){test[earID].hertz[hzID].numOnlyNo+=1;db+=10;}else if(db===75){if(test[earID].hertz[hzID].hzLevel!==500){// next hz\ndb=30;hzID+=1;}else if(earID===1&&test[earID].hertz[hzID].hzLevel===500){// end test\n_this.setState({isTestFinished:true});}else{// switch ears\nearID=1;hzID=0;db=30;}}else{db+=5;}_this.setState({test:test,currentEarID:earID,currentHzID:hzID,activeEar:_this.state.test[earID].ear,activeHertz:_this.state.test[earID].hertz[hzID].hzLevel,activeDecible:db// disableYesNo: true\n});};return _this;}_createClass(Audio,[{key:\"componentDidMount\",value:function componentDidMount(){this.setState({test:TEST// disableYesNo: true\n});}},{key:\"render\",value:function render(){var _this2=this;if(this.state.isTestFinished){return/*#__PURE__*/_jsx(\"main\",{className:\"container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"jumbotron bg-transparent\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Hearing Screening Complete!\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Note that your results are not a medical diagnosis of your hearing levels, but they can provide information about your hearing levels that could encourage you to schedule an appointment with an audiologist.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-check\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"form-check-input\",type:\"checkbox\",value:\"\",id:\"soundSet50\",onClick:function onClick(){_this2.props.disable();_this2.props.passResults(_this2.state.test);}}),/*#__PURE__*/_jsx(\"label\",{className:\"form-check-label\",htmlFor:\"soundSet50\",children:\"I acknowledge the above statement\"})]})]})});}else{return/*#__PURE__*/_jsx(\"main\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"container text-center d-flex flex-column\",children:[/*#__PURE__*/_jsx(ToneDisplay,{currentEar:this.state.activeEar// passing current ear\n,currentHZ:this.state.activeHertz// passing current hz\n,currentDB:this.state.activeDecible// passing current db\n,timeOut:this.handleDisableBtnWithAudio,isButtonDisabled:this.state.isButtonDisabled,checkClick:this.handleDisableBtnUntilTone}),/*#__PURE__*/_jsx(\"h4\",{className:\"font-weight-light py-2 m-0\",children:\"Do you hear this tone?\"}),/*#__PURE__*/_jsx(AudioResponse,{drop10:this.handleDrop// passing drop function\n,increase5:this.handleIncrease// passing increase function\n,isButtonDisabled:this.state.isButtonDisabled,hasTonePlayed:this.state.disableYesNo}),/*#__PURE__*/_jsx(WhatToDo,{})]})});}}}]);return Audio;}(Component);var ToneDisplay=/*#__PURE__*/function(_Component2){_inherits(ToneDisplay,_Component2);var _super2=_createSuper(ToneDisplay);function ToneDisplay(){_classCallCheck(this,ToneDisplay);return _super2.apply(this,arguments);}_createClass(ToneDisplay,[{key:\"render\",value:function render(){// using the passed hz/db to concat different parts together for file path name\nvar ear=this.props.currentEar;var hz=this.props.currentHZ;var db=this.props.currentDB;var boop=\"play\"+ear+hz+\"Hz\"+db;var title=\"Right Ear - \";if(ear==='L'){title=\"Left Ear - \";}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:title+hz+\"Hz\"}),/*#__PURE__*/_jsx(\"div\",{className:\"d-flex justify-content-center\",children:/*#__PURE__*/_jsx(BoopButton,{boop:boop,clickDisable:this.props.timeOut,disabled:this.props.isButtonDisabled,hasClicked:this.props.checkClick})})]});}}]);return ToneDisplay;}(Component);var AudioResponse=/*#__PURE__*/function(_Component3){_inherits(AudioResponse,_Component3);var _super3=_createSuper(AudioResponse);function AudioResponse(){_classCallCheck(this,AudioResponse);return _super3.apply(this,arguments);}_createClass(AudioResponse,[{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(\"div\",{className:\"d-inline-flex justify-content-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"row py-2 mb-4 m-2 align-items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col\",children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-dark text-nowrap screening-btn-hear\",disabled:this.props.isButtonDisabled||this.props.hasTonePlayed,onClick:this.props.increase5,children:/*#__PURE__*/_jsxs(\"h4\",{className:\"font-weight-light py-2 m-0\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-hand-thumbs-down text-black\"}),\" No\"]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"col\",children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-info text-nowrap screening-btn-hear\",disabled:this.props.isButtonDisabled||this.props.hasTonePlayed,onClick:this.props.drop10,children:/*#__PURE__*/_jsxs(\"h4\",{className:\"font-weight-light py-2 m-0\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-hand-thumbs-up text-black\"}),\" Yes\"]})})})]})});}}]);return AudioResponse;}(Component);function WhatToDo(){return/*#__PURE__*/_jsxs(\"div\",{className:\"px-2\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-transparent\",type:\"link\",id:\"informationPopover\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"mb-0 font-weight-light\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-info-circle text-info\"}),\" What do I do?\"]})}),/*#__PURE__*/_jsx(UncontrolledPopover,{placement:\"bottom\",target:\"informationPopover\",children:/*#__PURE__*/_jsx(PopoverBody,{className:\"font-weight-light shadow text-center\",children:/*#__PURE__*/_jsx(\"p\",{className:\"m-0 p-0\",children:\"Click the play button to listen to the tone, \\u201CNo\\u201D if you did not hear the sound and \\u201CYes\\u201D if you did. If you want to stop your hearing screening and go back to the instructions, click the \\u201Crestart\\u201D button. \"})})})]});}export default Audio;","map":{"version":3,"sources":["/Users/michelleponting/Desktop/Sound-Sustainability-Virtual-Hearing-Test/src/components/hearingtest/hearingscreening/screening_routes/Audio.js"],"names":["React","Component","UncontrolledPopover","PopoverBody","BoopButton","TEST","Audio","state","isTestFinished","disableYesNo","isButtonDisabled","test","currentEarID","currentHzID","activeEar","activeHertz","activeDecible","handleDisableBtnUntilTone","setState","handleDisableBtnWithAudio","setTimeout","getDecibleID","db","id","handleDrop","earID","hzID","dbID","hertz","ableToHear","decibles","hasPlayed","numHeard","numMissed","totalPlayed","hitRate","Number","toFixed","minThres","hzLevel","ear","handleIncrease","numOnlyNo","props","disable","passResults","ToneDisplay","currentEar","hz","currentHZ","currentDB","boop","title","timeOut","checkClick","AudioResponse","hasTonePlayed","increase5","drop10","WhatToDo"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { UncontrolledPopover, PopoverBody } from 'reactstrap';\n\nimport { BoopButton } from './TonePlayback';\nimport { TEST } from './TestConstant';\n\n// cp\nclass Audio extends Component {\n   state = {\n      isTestFinished: false,\n      disableYesNo: false, // debug set false\n      isButtonDisabled: false,\n      test: [],\n\n      currentEarID: 0, // 0=R starting\n      currentHzID: 0, // 0=1000 starting \n      // (do not need to track dbID since changes based on the yes or no)\n\n      activeEar: 'R',\n      activeHertz: 1000,\n      activeDecible: 30\n   }\n\n   componentDidMount() {\n      this.setState({\n         test: TEST,\n         // disableYesNo: true\n      });\n   }\n\n   handleDisableBtnUntilTone = () => {\n      this.setState({\n         disableYesNo: false\n      });\n   }\n\n   handleDisableBtnWithAudio = () => {\n      this.setState({\n         // isButtonDisabled: true\n      });\n\n      // **** here's the timeout ****\n      setTimeout(() => this.setState({ isButtonDisabled: false }), 3500);\n   }\n\n   // use activeDecible to then pass to this function to get array id\n   getDecibleID = (db) => {\n      let id = (db - 15) / 5;\n      return id;\n   }\n\n   // when you click yes\n   handleDrop = () => {\n      let earID = this.state.currentEarID;\n      let hzID = this.state.currentHzID;\n      let db = this.state.activeDecible;\n      let dbID = this.getDecibleID(db);\n\n      // test object copy\n      let test = [...this.state.test];\n\n      // check if first time hz has played\n      // !yes = update ableToHear for hz level to true\n      if (!test[earID].hertz[hzID].ableToHear) {\n         test[earID].hertz[hzID].ableToHear = true;\n      }\n\n      // check if this db has played before for this hz\n      // !yes = set hasPlayed for decible level to true\n      if (!test[earID].hertz[hzID].decibles[dbID].hasPlayed) {\n         test[earID].hertz[hzID].decibles[dbID].hasPlayed = true;\n      }\n\n      // overall things to update\n      // current db numHeard +1\n      test[earID].hertz[hzID].decibles[dbID].numHeard += 1;\n\n      // check numHeard + numMissed to tell if repeat or move on\n      let numHeard = test[earID].hertz[hzID].decibles[dbID].numHeard;\n      let numMissed = test[earID].hertz[hzID].decibles[dbID].numMissed;\n      let totalPlayed = numHeard + numMissed;\n      let hitRate = Number((numHeard / totalPlayed).toFixed(2));\n\n      // if at lowest dB then jump to the next hz\n      if (totalPlayed >= 2 && hitRate > .65) {\n         test[earID].hertz[hzID].minThres = db; // set min thres before moving on\n\n         if (earID === 1 && test[earID].hertz[hzID].hzLevel === 500) {\n            this.setState({\n               isTestFinished: true\n            });\n         } else {\n            if (test[earID].hertz[hzID].hzLevel !== 500) { // change hz\n               hzID += 1;\n               db = 30;\n\n            } else if (test[earID].hertz[hzID].hzLevel === 500) { // change ears\n               earID = 1;\n               hzID = 0;\n               db = 30;\n\n            }\n         }\n\n      } else if (db === 20) { // edge case\n         db -= 5;\n      } else if (db - 10 >= 15) { // drop case\n         db -= 10;\n      }\n\n      this.setState({\n         test: test,\n         currentEarID: earID,\n         currentHzID: hzID,\n         activeEar: this.state.test[earID].ear,\n         activeHertz: this.state.test[earID].hertz[hzID].hzLevel,\n         activeDecible: db,\n         // disableYesNo: true\n      });\n   };\n\n   // when you click no\n   handleIncrease = () => {\n\n      let earID = this.state.currentEarID;\n      let hzID = this.state.currentHzID;\n      let db = this.state.activeDecible;\n      let dbID = this.getDecibleID(db);\n\n      // test object copy\n      let test = [...this.state.test];\n\n      // overall things to update\n      // current db numMissed +1\n      test[earID].hertz[hzID].decibles[dbID].numMissed += 1;\n\n      // check first time hz played and unable to hear\n      // !hear = update numOnlyNo \n      if (!test[earID].hertz[hzID].ableToHear && db < 70) {\n         test[earID].hertz[hzID].numOnlyNo += 1;\n         db += 10;\n      } else if (db === 75) {\n\n         if (test[earID].hertz[hzID].hzLevel !== 500) { // next hz\n            db = 30;\n            hzID += 1;\n\n         } else if (earID === 1 && test[earID].hertz[hzID].hzLevel === 500) { // end test\n            this.setState({\n               isTestFinished: true\n            });\n         } else { // switch ears\n            earID = 1;\n            hzID = 0;\n            db = 30;\n         }\n\n      } else {\n         db += 5;\n      }\n\n      this.setState({\n         test: test,\n         currentEarID: earID,\n         currentHzID: hzID,\n         activeEar: this.state.test[earID].ear,\n         activeHertz: this.state.test[earID].hertz[hzID].hzLevel,\n         activeDecible: db,\n         // disableYesNo: true\n      });\n   };\n\n   render() {\n      if (this.state.isTestFinished) {\n         return (\n            <main className=\"container\">\n               <div className=\"jumbotron bg-transparent\">\n                  <h3>Hearing Screening Complete!</h3>\n                  <p>Note that your results are not a medical diagnosis of your hearing levels, but they can provide information about your hearing levels that could encourage you to schedule an appointment with an audiologist.</p>\n                  <div className=\"form-check\">\n                     <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"soundSet50\" onClick={() => { this.props.disable(); this.props.passResults(this.state.test); }} />\n                     <label className=\"form-check-label\" htmlFor=\"soundSet50\">\n                        I acknowledge the above statement\n                     </label>\n                  </div>\n               </div>\n            </main>\n         );\n      } else {\n         return (\n            <main>\n               <div className=\"container text-center d-flex flex-column\">\n                  <ToneDisplay\n                     currentEar={this.state.activeEar} // passing current ear\n                     currentHZ={this.state.activeHertz} // passing current hz\n                     currentDB={this.state.activeDecible} // passing current db\n                     timeOut={this.handleDisableBtnWithAudio}\n                     isButtonDisabled={this.state.isButtonDisabled}\n                     checkClick={this.handleDisableBtnUntilTone}\n                  />\n                  <h4 className=\"font-weight-light py-2 m-0\">Do you hear this tone?</h4>\n                  <AudioResponse\n                     drop10={this.handleDrop} // passing drop function\n                     increase5={this.handleIncrease} // passing increase function\n                     isButtonDisabled={this.state.isButtonDisabled}\n                     hasTonePlayed={this.state.disableYesNo}\n                  />\n                  <WhatToDo />\n               </div>\n            </main>\n         );\n      }\n   }\n}\n\nclass ToneDisplay extends Component {\n   render() {\n      // using the passed hz/db to concat different parts together for file path name\n      let ear = this.props.currentEar;\n      let hz = this.props.currentHZ;\n      let db = this.props.currentDB;\n      let boop = (\"play\" + ear + hz + \"Hz\" + db);\n      let title = \"Right Ear - \";\n\n      if (ear === 'L') {\n         title = \"Left Ear - \";\n      }\n\n      return (\n         <div>\n            <h2>\n               {title + hz + \"Hz\"}\n            </h2>\n            <div className=\"d-flex justify-content-center\" >\n               <BoopButton\n                  boop={boop}\n                  clickDisable={this.props.timeOut}\n                  disabled={this.props.isButtonDisabled}\n                  hasClicked={this.props.checkClick}\n               />\n            </div>\n         </div>\n      );\n   }\n}\n\n\nclass AudioResponse extends Component {\n   render() {\n\n      return (\n         <div className=\"d-inline-flex justify-content-center\">\n            <div className=\"row py-2 mb-4 m-2 align-items-center\">\n               <div className=\"col\">\n                  <button type=\"button\" className=\"btn btn-dark text-nowrap screening-btn-hear\" disabled={this.props.isButtonDisabled || this.props.hasTonePlayed} onClick={this.props.increase5}>\n                     <h4 className=\"font-weight-light py-2 m-0\"><i className=\"bi bi-hand-thumbs-down text-black\"></i> No</h4>\n                  </button>\n\n               </div>\n\n               <div className=\"col\">\n\n                  <button type=\"button\" className=\"btn btn-info text-nowrap screening-btn-hear\" disabled={this.props.isButtonDisabled || this.props.hasTonePlayed} onClick={this.props.drop10}>\n                     <h4 className=\"font-weight-light py-2 m-0\"><i className=\"bi bi-hand-thumbs-up text-black\"></i> Yes</h4>\n                  </button>\n\n               </div>\n            </div>\n         </div>\n      );\n   }\n}\n\nfunction WhatToDo() {\n      return (\n         <div className=\"px-2\">\n            <button className=\"btn btn-transparent\" type=\"link\" id=\"informationPopover\">\n               <p className=\"mb-0 font-weight-light\"><i className=\"bi bi-info-circle text-info\"></i> What do I do?</p>\n            </button>\n            <UncontrolledPopover\n               placement=\"bottom\"\n               target=\"informationPopover\"\n            >\n               <PopoverBody className=\"font-weight-light shadow text-center\">\n                  <p className=\"m-0 p-0\">Click the play button to listen to the tone, “No” if you did not hear the sound and “Yes” if you did. If you want to stop your hearing screening and go back to the instructions, click the “restart” button. </p>\n               </PopoverBody>\n            </UncontrolledPopover>\n         </div>\n      );\n   \n}\n\nexport default Audio;"]},"metadata":{},"sourceType":"module"}