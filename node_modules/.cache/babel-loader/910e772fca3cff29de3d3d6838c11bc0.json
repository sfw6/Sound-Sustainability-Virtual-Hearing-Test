{"ast":null,"code":"export const TEST = [{\n  // key = 0\n  ear: 'R',\n  overallMaxDecible: 20,\n  hertz: [{\n    // key = 0\n    hzLevel: 1000,\n    ableToHear: false,\n    minThres: 100,\n    // set to arbitrary high value so that if hz heard and minThres met then will change\n    numOnlyNo: 0,\n    // number of No clicked before Yes highest possible = 10\n    decibles: [{\n      decible: 15,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 20,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 25,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 30,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 35,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 40,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 45,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 50,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 55,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 60,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 65,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 70,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }, {\n      decible: 75,\n      hasPlayed: false,\n      numHeard: 0,\n      numMissed: 0\n    }]\n  }]\n}];","map":{"version":3,"sources":["/Users/michelleponting/Desktop/hearingtest/webpage/src/components/hearingtest/hearingscreening/screening_routes/TestConstant.js"],"names":["TEST","ear","overallMaxDecible","hertz","hzLevel","ableToHear","minThres","numOnlyNo","decibles","decible","hasPlayed","numHeard","numMissed"],"mappings":"AAAA,OAAO,MAAMA,IAAI,GAAG,CAChB;AAAE;AACAC,EAAAA,GAAG,EAAE,GADP;AAEEC,EAAAA,iBAAiB,EAAE,EAFrB;AAGEC,EAAAA,KAAK,EAAE,CACL;AAAE;AACAC,IAAAA,OAAO,EAAE,IADX;AAEEC,IAAAA,UAAU,EAAE,KAFd;AAGEC,IAAAA,QAAQ,EAAE,GAHZ;AAGiB;AACfC,IAAAA,SAAS,EAAE,CAJb;AAIgB;AACdC,IAAAA,QAAQ,EAAE,CACR;AAAEC,MAAAA,OAAO,EAAE,EAAX;AAAeC,MAAAA,SAAS,EAAE,KAA1B;AAAiCC,MAAAA,QAAQ,EAAE,CAA3C;AAA8CC,MAAAA,SAAS,EAAE;AAAzD,KADQ,EAER;AAAEH,MAAAA,OAAO,EAAE,EAAX;AAAeC,MAAAA,SAAS,EAAE,KAA1B;AAAiCC,MAAAA,QAAQ,EAAE,CAA3C;AAA8CC,MAAAA,SAAS,EAAE;AAAzD,KAFQ,EAGR;AAAEH,MAAAA,OAAO,EAAE,EAAX;AAAeC,MAAAA,SAAS,EAAE,KAA1B;AAAiCC,MAAAA,QAAQ,EAAE,CAA3C;AAA8CC,MAAAA,SAAS,EAAE;AAAzD,KAHQ,EAIR;AAAEH,MAAAA,OAAO,EAAE,EAAX;AAAeC,MAAAA,SAAS,EAAE,KAA1B;AAAiCC,MAAAA,QAAQ,EAAE,CAA3C;AAA8CC,MAAAA,SAAS,EAAE;AAAzD,KAJQ,EAKR;AAAEH,MAAAA,OAAO,EAAE,EAAX;AAAeC,MAAAA,SAAS,EAAE,KAA1B;AAAiCC,MAAAA,QAAQ,EAAE,CAA3C;AAA8CC,MAAAA,SAAS,EAAE;AAAzD,KALQ,EAMR;AAAEH,MAAAA,OAAO,EAAE,EAAX;AAAeC,MAAAA,SAAS,EAAE,KAA1B;AAAiCC,MAAAA,QAAQ,EAAE,CAA3C;AAA8CC,MAAAA,SAAS,EAAE;AAAzD,KANQ,EAOR;AAAEH,MAAAA,OAAO,EAAE,EAAX;AAAeC,MAAAA,SAAS,EAAE,KAA1B;AAAiCC,MAAAA,QAAQ,EAAE,CAA3C;AAA8CC,MAAAA,SAAS,EAAE;AAAzD,KAPQ,EAQR;AAAEH,MAAAA,OAAO,EAAE,EAAX;AAAeC,MAAAA,SAAS,EAAE,KAA1B;AAAiCC,MAAAA,QAAQ,EAAE,CAA3C;AAA8CC,MAAAA,SAAS,EAAE;AAAzD,KARQ,EASR;AAAEH,MAAAA,OAAO,EAAE,EAAX;AAAeC,MAAAA,SAAS,EAAE,KAA1B;AAAiCC,MAAAA,QAAQ,EAAE,CAA3C;AAA8CC,MAAAA,SAAS,EAAE;AAAzD,KATQ,EAUR;AAAEH,MAAAA,OAAO,EAAE,EAAX;AAAeC,MAAAA,SAAS,EAAE,KAA1B;AAAiCC,MAAAA,QAAQ,EAAE,CAA3C;AAA8CC,MAAAA,SAAS,EAAE;AAAzD,KAVQ,EAWR;AAAEH,MAAAA,OAAO,EAAE,EAAX;AAAeC,MAAAA,SAAS,EAAE,KAA1B;AAAiCC,MAAAA,QAAQ,EAAE,CAA3C;AAA8CC,MAAAA,SAAS,EAAE;AAAzD,KAXQ,EAYR;AAAEH,MAAAA,OAAO,EAAE,EAAX;AAAeC,MAAAA,SAAS,EAAE,KAA1B;AAAiCC,MAAAA,QAAQ,EAAE,CAA3C;AAA8CC,MAAAA,SAAS,EAAE;AAAzD,KAZQ,EAaR;AAAEH,MAAAA,OAAO,EAAE,EAAX;AAAeC,MAAAA,SAAS,EAAE,KAA1B;AAAiCC,MAAAA,QAAQ,EAAE,CAA3C;AAA8CC,MAAAA,SAAS,EAAE;AAAzD,KAbQ;AALZ,GADK;AAHT,CADgB,CAAb","sourcesContent":["export const TEST = [\n    { // key = 0\n      ear: 'R',\n      overallMaxDecible: 20,\n      hertz: [\n        { // key = 0\n          hzLevel: 1000,\n          ableToHear: false, \n          minThres: 100, // set to arbitrary high value so that if hz heard and minThres met then will change\n          numOnlyNo: 0, // number of No clicked before Yes highest possible = 10\n          decibles: [\n            { decible: 15, hasPlayed: false, numHeard: 0, numMissed: 0 }, \n            { decible: 20, hasPlayed: false, numHeard: 0, numMissed: 0 }, \n            { decible: 25, hasPlayed: false, numHeard: 0, numMissed: 0 }, \n            { decible: 30, hasPlayed: false, numHeard: 0, numMissed: 0 }, \n            { decible: 35, hasPlayed: false, numHeard: 0, numMissed: 0 }, \n            { decible: 40, hasPlayed: false, numHeard: 0, numMissed: 0 },\n            { decible: 45, hasPlayed: false, numHeard: 0, numMissed: 0 },\n            { decible: 50, hasPlayed: false, numHeard: 0, numMissed: 0 },\n            { decible: 55, hasPlayed: false, numHeard: 0, numMissed: 0 },\n            { decible: 60, hasPlayed: false, numHeard: 0, numMissed: 0 },\n            { decible: 65, hasPlayed: false, numHeard: 0, numMissed: 0 },\n            { decible: 70, hasPlayed: false, numHeard: 0, numMissed: 0 },\n            { decible: 75, hasPlayed: false, numHeard: 0, numMissed: 0 }\n          ]\n        },\n      ]\n    }\n];"]},"metadata":{},"sourceType":"module"}