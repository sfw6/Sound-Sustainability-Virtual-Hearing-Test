{"ast":null,"code":"var _jsxFileName = \"/Users/michelleponting/Desktop/hearingtest/webpage/src/components/hearingscreening/screening_routes/audio.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tones = [{\n  id: \"0\",\n  hertz: 500\n}, {\n  id: \"1\",\n  hertz: 1000\n}];\nconst pathStart = \"audio_tones/\";\nconst pathEnd = \".png\";\n\nclass Audio extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tones: [],\n      activeTone: '0',\n      // for testing purposes it is set here\n      activeHertz: 500,\n      // for testing purposes it is set here\n      activeDecible: 35 // for testing purposes it is set here\n\n    };\n\n    this.handleDrop = () => {\n      console.log(this.state.activeTone);\n      console.log(this.state.activeHertz);\n      console.log(this.state.activeDecible);\n      let idx = this.state.activeTone;\n      let db = this.state.activeDecible; // if at lowest dB then jump to the next hz\n\n      if (db - 10 < 20) {\n        // if at highest hz then for now do pop up!\n        if (idx === \"2\") {\n          console.log(\"now at lowest db for highest hz\");\n        } else {\n          console.log(\"next hz\");\n          idx += 1;\n          this.setState({\n            activeTone: idx,\n            activeHertz: this.state.tones[idx].hertz,\n            activeDecible: 35 // for testing purposes it is set here\n\n          });\n        }\n      } else {\n        console.log(\"dropping 10dB\");\n        db = db - 10;\n        this.setState({\n          activeDecible: db\n        });\n        console.log(this.state.activeDecible);\n      }\n    };\n\n    this.handleIncrease = () => {\n      console.log(\"up\");\n      let idx = this.state.activeTone;\n      let hz = this.state.activeHertz;\n      let db = this.state.activeDecible; // if at highest dB then jump to the next hz\n\n      if (db === 50) {\n        // if at highest hz then for now do pop up!\n        if (hz === 1000) {\n          console.log(\"now at highest db for highest hz\");\n        } else {\n          console.log(\"next hz\");\n          idx += 1;\n          this.setState({\n            activeTone: idx,\n            activeHertz: this.state.tones[idx].hertz,\n            activeDecible: 35 // for testing purposes it is set here\n\n          });\n        }\n      } else {\n        console.log(\"up by 5dB\");\n        db += 5;\n        this.setState({\n          activeDecible: db\n        });\n      }\n    };\n\n    this.handleReplay = () => {\n      console.log(\"replay -- reset at lowest hz/db combo\");\n      this.setState({\n        activeTone: '1',\n        // for testing purposes it is set here\n        activeHertz: '500',\n        // for testing purposes it is set here\n        activeDecible: '20' // for testing purposes it is set here\n\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      tones: tones\n    });\n  } // when you click yes\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container text-center d-flex flex-column\",\n        children: [/*#__PURE__*/_jsxDEV(ToneDisplay, {\n          currentHZ: this.state.activeHertz,\n          currentDB: this.state.activeDecible\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"font-weight-light py-2 m-0\",\n          children: \"Do you hear this tone?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(AudioResponse, {\n          drop10: this.handleDrop,\n          increase5: this.handleIncrease,\n          replay: this.handleReplay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-danger\",\n          children: \"next tone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass ToneDisplay extends Component {\n  render() {\n    let hz = \"Hz\" + this.props.currentHZ;\n    let db = \"dB\" + this.props.currentDB;\n    console.log(hz + db);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: pathStart + hz + db + pathEnd,\n        alt: \"Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass AudioResponse extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-inline-flex justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row py-2 mb-4 m-2 align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-dark text-nowrap screening-btn-hear\",\n            onClick: this.props.increase5,\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-hand-thumbs-down text-black\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 22\n            }, this), \" No\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn\",\n          onClick: this.props.replay,\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"mb-0\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-arrow-repeat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-info text-nowrap screening-btn-hear\",\n            onClick: this.props.drop10,\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-hand-thumbs-up text-black\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 22\n            }, this), \" Yes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 10\n    }, this);\n  }\n\n} // class FinishScreening extends Component {\n//    render() {\n//       return (\n//          <div>\n//             <button type=\"button\" className=\"btn btn-success\">Finished</button>\n//          </div>\n//       );\n//    }\n// }\n\n\nexport default Audio;","map":{"version":3,"sources":["/Users/michelleponting/Desktop/hearingtest/webpage/src/components/hearingscreening/screening_routes/audio.js"],"names":["React","Component","tones","id","hertz","pathStart","pathEnd","Audio","state","activeTone","activeHertz","activeDecible","handleDrop","console","log","idx","db","setState","handleIncrease","hz","handleReplay","componentDidMount","render","ToneDisplay","props","currentHZ","currentDB","AudioResponse","increase5","replay","drop10"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,KAAK,GAAG,CACX;AACGC,EAAAA,EAAE,EAAE,GADP;AAEGC,EAAAA,KAAK,EAAE;AAFV,CADW,EAKX;AACGD,EAAAA,EAAE,EAAE,GADP;AAEGC,EAAAA,KAAK,EAAE;AAFV,CALW,CAAd;AAWA,MAAMC,SAAS,GAAG,cAAlB;AACA,MAAMC,OAAO,GAAG,MAAhB;;AAEA,MAAMC,KAAN,SAAoBN,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC3BO,KAD2B,GACnB;AACLN,MAAAA,KAAK,EAAE,EADF;AAELO,MAAAA,UAAU,EAAE,GAFP;AAEY;AACjBC,MAAAA,WAAW,EAAE,GAHR;AAGa;AAClBC,MAAAA,aAAa,EAAE,EAJV,CAIa;;AAJb,KADmB;;AAAA,SAa3BC,UAb2B,GAad,MAAM;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWC,UAAvB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWE,WAAvB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWG,aAAvB;AAEA,UAAII,GAAG,GAAG,KAAKP,KAAL,CAAWC,UAArB;AACA,UAAIO,EAAE,GAAG,KAAKR,KAAL,CAAWG,aAApB,CANgB,CAQhB;;AACA,UAAIK,EAAE,GAAG,EAAL,GAAU,EAAd,EAAkB;AACf;AACA,YAAID,GAAG,KAAK,GAAZ,EAAiB;AACdF,UAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACF,SAFD,MAEO;AACJD,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAC,UAAAA,GAAG,IAAI,CAAP;AACA,eAAKE,QAAL,CAAc;AACXR,YAAAA,UAAU,EAAEM,GADD;AAEXL,YAAAA,WAAW,EAAE,KAAKF,KAAL,CAAWN,KAAX,CAAiBa,GAAjB,EAAsBX,KAFxB;AAGXO,YAAAA,aAAa,EAAE,EAHJ,CAGO;;AAHP,WAAd;AAKF;AACH,OAbD,MAaO;AACJE,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAE,QAAAA,EAAE,GAAGA,EAAE,GAAG,EAAV;AACA,aAAKC,QAAL,CAAc;AACXN,UAAAA,aAAa,EAAEK;AADJ,SAAd;AAGAH,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWG,aAAvB;AACF;AACH,KA3C0B;;AAAA,SA8C3BO,cA9C2B,GA8CV,MAAM;AACpBL,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AAEA,UAAIC,GAAG,GAAG,KAAKP,KAAL,CAAWC,UAArB;AACA,UAAIU,EAAE,GAAG,KAAKX,KAAL,CAAWE,WAApB;AACA,UAAIM,EAAE,GAAG,KAAKR,KAAL,CAAWG,aAApB,CALoB,CAOpB;;AACA,UAAIK,EAAE,KAAK,EAAX,EAAe;AACZ;AACA,YAAIG,EAAE,KAAK,IAAX,EAAiB;AACdN,UAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACF,SAFD,MAEO;AACJD,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAC,UAAAA,GAAG,IAAI,CAAP;AACA,eAAKE,QAAL,CAAc;AACXR,YAAAA,UAAU,EAAEM,GADD;AAEXL,YAAAA,WAAW,EAAE,KAAKF,KAAL,CAAWN,KAAX,CAAiBa,GAAjB,EAAsBX,KAFxB;AAGXO,YAAAA,aAAa,EAAE,EAHJ,CAGO;;AAHP,WAAd;AAKF;AACH,OAbD,MAaO;AACJE,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAE,QAAAA,EAAE,IAAI,CAAN;AACA,aAAKC,QAAL,CAAc;AACXN,UAAAA,aAAa,EAAEK;AADJ,SAAd;AAGF;AACH,KA1E0B;;AAAA,SA4E3BI,YA5E2B,GA4EZ,MAAM;AAClBP,MAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ;AACA,WAAKG,QAAL,CAAc;AACXR,QAAAA,UAAU,EAAE,GADD;AACM;AACjBC,QAAAA,WAAW,EAAE,KAFF;AAES;AACpBC,QAAAA,aAAa,EAAE,IAHJ,CAGS;;AAHT,OAAd;AAKF,KAnF0B;AAAA;;AAQ3BU,EAAAA,iBAAiB,GAAG;AACjB,SAAKJ,QAAL,CAAc;AAAEf,MAAAA,KAAK,EAAEA;AAAT,KAAd;AACF,GAV0B,CAY3B;;;AAyEAoB,EAAAA,MAAM,GAAG;AACN,wBACG;AAAA,6BACG;AAAK,QAAA,SAAS,EAAC,0CAAf;AAAA,gCACG,QAAC,WAAD;AACG,UAAA,SAAS,EAAE,KAAKd,KAAL,CAAWE,WADzB;AAEG,UAAA,SAAS,EAAE,KAAKF,KAAL,CAAWG;AAFzB;AAAA;AAAA;AAAA;AAAA,gBADH,eAKG;AAAI,UAAA,SAAS,EAAC,4BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALH,eAMG,QAAC,aAAD;AACG,UAAA,MAAM,EAAE,KAAKC,UADhB;AAEG,UAAA,SAAS,EAAE,KAAKM,cAFnB;AAGG,UAAA,MAAM,EAAE,KAAKE;AAHhB;AAAA;AAAA;AAAA;AAAA,gBANH,eAWG;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,gBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YADH;AAiBF;;AAvG0B;;AA0G9B,MAAMG,WAAN,SAA0BtB,SAA1B,CAAoC;AACjCqB,EAAAA,MAAM,GAAG;AACN,QAAIH,EAAE,GAAG,OAAO,KAAKK,KAAL,CAAWC,SAA3B;AACA,QAAIT,EAAE,GAAG,OAAO,KAAKQ,KAAL,CAAWE,SAA3B;AACAb,IAAAA,OAAO,CAACC,GAAR,CAAYK,EAAE,GAAGH,EAAjB;AACA,wBACG;AAAA,6BACG;AAAK,QAAA,GAAG,EAAEX,SAAS,GAAGc,EAAZ,GAAiBH,EAAjB,GAAsBV,OAAhC;AAAyC,QAAA,GAAG,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YADH;AAKF;;AAVgC;;AAapC,MAAMqB,aAAN,SAA4B1B,SAA5B,CAAsC;AACnCqB,EAAAA,MAAM,GAAG;AACN,wBACG;AAAK,MAAA,SAAS,EAAC,sCAAf;AAAA,6BACG;AAAK,QAAA,SAAS,EAAC,sCAAf;AAAA,gCACG;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,iCAEG;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,SAAS,EAAC,6CAAhC;AAA8E,YAAA,OAAO,EAAE,KAAKE,KAAL,CAAWI,SAAlG;AAAA,oCACG;AAAG,cAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,oBADH;AAAA;AAAA;AAAA;AAAA;AAAA;AAFH;AAAA;AAAA;AAAA;AAAA,gBADH,eAQG;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,KAAhC;AAAsC,UAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWK,MAA1D;AAAA,iCACG;AAAI,YAAA,SAAS,EAAC,MAAd;AAAA,mCAAqB;AAAG,cAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAArB;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,gBARH,eAWG;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,iCAEG;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,SAAS,EAAC,6CAAhC;AAA8E,YAAA,OAAO,EAAE,KAAKL,KAAL,CAAWM,MAAlG;AAAA,oCACG;AAAG,cAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,oBADH;AAAA;AAAA;AAAA;AAAA;AAAA;AAFH;AAAA;AAAA;AAAA;AAAA,gBAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YADH;AAuBF;;AAzBkC,C,CA4BtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAevB,KAAf","sourcesContent":["import React, { Component } from 'react';\n\nconst tones = [\n   {\n      id: \"0\",\n      hertz: 500\n   },\n   {\n      id: \"1\",\n      hertz: 1000\n   },\n];\n\nconst pathStart = \"audio_tones/\";\nconst pathEnd = \".png\";\n\nclass Audio extends Component {\n   state = {\n      tones: [],\n      activeTone: '0', // for testing purposes it is set here\n      activeHertz: 500, // for testing purposes it is set here\n      activeDecible: 35 // for testing purposes it is set here\n   }\n\n   componentDidMount() {\n      this.setState({ tones: tones });\n   }\n\n   // when you click yes\n   handleDrop = () => {\n      console.log(this.state.activeTone);\n      console.log(this.state.activeHertz);\n      console.log(this.state.activeDecible);\n\n      let idx = this.state.activeTone;\n      let db = this.state.activeDecible;\n\n      // if at lowest dB then jump to the next hz\n      if (db - 10 < 20) {\n         // if at highest hz then for now do pop up!\n         if (idx === \"2\") {\n            console.log(\"now at lowest db for highest hz\");\n         } else {\n            console.log(\"next hz\");\n            idx += 1;\n            this.setState({\n               activeTone: idx, \n               activeHertz: this.state.tones[idx].hertz, \n               activeDecible: 35 // for testing purposes it is set here\n            });\n         }\n      } else {\n         console.log(\"dropping 10dB\");\n         db = db - 10;\n         this.setState({\n            activeDecible: db\n         });\n         console.log(this.state.activeDecible);\n      }\n   };\n\n   // when you click no\n   handleIncrease = () => {\n      console.log(\"up\")\n\n      let idx = this.state.activeTone;\n      let hz = this.state.activeHertz;\n      let db = this.state.activeDecible;\n\n      // if at highest dB then jump to the next hz\n      if (db === 50) {\n         // if at highest hz then for now do pop up!\n         if (hz === 1000) {\n            console.log(\"now at highest db for highest hz\")\n         } else {\n            console.log(\"next hz\")\n            idx += 1;\n            this.setState({\n               activeTone: idx, \n               activeHertz: this.state.tones[idx].hertz, \n               activeDecible: 35 // for testing purposes it is set here\n            });\n         }\n      } else {\n         console.log(\"up by 5dB\")\n         db += 5;\n         this.setState({\n            activeDecible: db\n         });\n      }\n   };\n\n   handleReplay = () => {\n      console.log(\"replay -- reset at lowest hz/db combo\")\n      this.setState({\n         activeTone: '1', // for testing purposes it is set here\n         activeHertz: '500', // for testing purposes it is set here\n         activeDecible: '20' // for testing purposes it is set here\n      });\n   };\n\n   render() {\n      return (\n         <main>\n            <div className=\"container text-center d-flex flex-column\">\n               <ToneDisplay \n                  currentHZ={this.state.activeHertz}\n                  currentDB={this.state.activeDecible}\n               />\n               <h4 className=\"font-weight-light py-2 m-0\">Do you hear this tone?</h4>\n               <AudioResponse \n                  drop10={this.handleDrop}\n                  increase5={this.handleIncrease}\n                  replay={this.handleReplay}\n               />\n               <button type=\"button\" className=\"btn btn-danger\">next tone</button>\n             </div>\n         </main>\n      );\n   }\n}\n\nclass ToneDisplay extends Component {\n   render() {\n      let hz = \"Hz\" + this.props.currentHZ\n      let db = \"dB\" + this.props.currentDB\n      console.log(hz + db)\n      return (\n         <div>\n            <img src={pathStart + hz + db + pathEnd} alt=\"Logo\" />\n         </div>\n      );\n   }\n}\n\nclass AudioResponse extends Component {\n   render() {\n      return (\n         <div className=\"d-inline-flex justify-content-center\">\n            <div className=\"row py-2 mb-4 m-2 align-items-center\">\n               <div className=\"col\">\n\n                  <button type=\"button\" className=\"btn btn-dark text-nowrap screening-btn-hear\" onClick={this.props.increase5}>\n                     <i className=\"bi bi-hand-thumbs-down text-black\"></i> No\n                  </button>\n\n               </div>\n               <button type=\"button\" className=\"btn\" onClick={this.props.replay}>\n                  <h3 className=\"mb-0\"><i className=\"bi bi-arrow-repeat\"></i></h3>\n               </button>\n               <div className=\"col\">\n\n                  <button type=\"button\" className=\"btn btn-info text-nowrap screening-btn-hear\" onClick={this.props.drop10}>\n                     <i className=\"bi bi-hand-thumbs-up text-black\"></i> Yes\n                  </button>\n\n               </div>\n            </div>\n         </div>\n      );\n   }\n}\n\n// class FinishScreening extends Component {\n//    render() {\n//       return (\n//          <div>\n//             <button type=\"button\" className=\"btn btn-success\">Finished</button>\n//          </div>\n//       );\n//    }\n// }\n\nexport default Audio;"]},"metadata":{},"sourceType":"module"}