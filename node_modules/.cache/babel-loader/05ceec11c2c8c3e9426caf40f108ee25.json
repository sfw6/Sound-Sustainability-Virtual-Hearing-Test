{"ast":null,"code":"var _jsxFileName = \"/Users/michelleponting/Desktop/hearingtest/webpage/src/components/hearingtest/hearingscreening/screening_routes/Audio.js\";\nimport React, { Component } from 'react';\nimport { UncontrolledPopover, PopoverBody } from 'reactstrap';\nimport { BoopButton } from './TonePlayback'; // cp\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Audio extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDisableBtnUntilTone = () => {\n      this.setState({//disableYesNo: false\n      });\n    };\n\n    this.handleDisableBtnWithAudio = () => {// this.setState({\n      //    isButtonDisabled: true\n      // });\n      // // **** here's the timeout ****\n      // setTimeout(() => this.setState({ isButtonDisabled: false }), 3500);\n    };\n\n    this.getDecibleID = db => {\n      let id = (db - 15) / 5;\n      return id;\n    };\n\n    this.handleDrop = () => {\n      let earID = this.state.currentEarID;\n      let hzID = this.state.currentHzID;\n      let db = this.state.activeDecible;\n      let dbID = this.getDecibleID(db); // test object copy\n\n      let test = [...this.state.test]; // check if first time hz has played\n      // !yes = update ableToHear for hz level to true\n\n      if (!test[earID].hertz[hzID].ableToHear) {\n        test[earID].hertz[hzID].ableToHear = true;\n      } // check if this db has played before for this hz\n      // !yes = set hasPlayed for decible level to true\n\n\n      if (!test[earID].hertz[hzID].decibles[dbID].hasPlayed) {\n        test[earID].hertz[hzID].decibles[dbID].hasPlayed = true;\n      } // overall things to update\n      // current db numHeard +1\n\n\n      test[earID].hertz[hzID].decibles[dbID].numHeard += 1; // check numHeard + numMissed to tell if repeat or move on\n\n      let numHeard = test[earID].hertz[hzID].decibles[dbID].numHeard;\n      let numMissed = test[earID].hertz[hzID].decibles[dbID].numMissed;\n      let totalPlayed = numHeard + numMissed;\n      let hitRate = Number((numHeard / totalPlayed).toFixed(2)); // if at lowest dB then jump to the next hz\n\n      if (totalPlayed >= 2 && hitRate > .65) {\n        test[earID].hertz[hzID].minThres = db; // set min thres before moving on\n\n        if (earID === 1 && test[earID].hertz[hzID].hzLevel === 500) {\n          this.setState({\n            isTestFinished: true\n          });\n        } else {\n          if (test[earID].hertz[hzID].hzLevel !== 500) {\n            // change hz\n            hzID += 1;\n            db = 30;\n          } else if (test[earID].hertz[hzID].hzLevel === 500) {\n            // change ears\n            earID = 1;\n            hzID = 0;\n            db = 30;\n          }\n        }\n      } else if (db === 20) {\n        // edge case\n        db -= 5;\n      } else if (db - 10 >= 15) {\n        // drop case\n        db -= 10;\n      }\n\n      this.setState({\n        test: test,\n        currentEarID: earID,\n        currentHzID: hzID,\n        activeEar: this.state.test[earID].ear,\n        activeHertz: this.state.test[earID].hertz[hzID].hzLevel,\n        activeDecible: db //disableYesNo: true\n\n      });\n    };\n\n    this.handleIncrease = () => {\n      let earID = this.state.currentEarID;\n      let hzID = this.state.currentHzID;\n      let db = this.state.activeDecible;\n      let dbID = this.getDecibleID(db); // test object copy\n\n      let test = [...this.state.test]; // overall things to update\n      // current db numMissed +1\n\n      test[earID].hertz[hzID].decibles[dbID].numMissed += 1; // check first time hz played and unable to hear\n      // !hear = update numOnlyNo \n\n      if (!test[earID].hertz[hzID].ableToHear && db < 70) {\n        test[earID].hertz[hzID].numOnlyNo += 1;\n        db += 10;\n      } else if (db === 75) {\n        if (test[earID].hertz[hzID].hzLevel !== 500) {\n          // next hz\n          db = 30;\n          hzID += 1;\n        } else if (earID === 1 && test[earID].hertz[hzID].hzLevel === 500) {\n          // end test\n          this.setState({\n            isTestFinished: true\n          });\n        } else {\n          // switch ears\n          earID = 1;\n          hzID = 0;\n          db = 30;\n        }\n      } else {\n        db += 5;\n      }\n\n      this.setState({\n        test: test,\n        currentEarID: earID,\n        currentHzID: hzID,\n        activeEar: this.state.test[earID].ear,\n        activeHertz: this.state.test[earID].hertz[hzID].hzLevel,\n        activeDecible: db //disableYesNo: true\n\n      });\n    };\n\n    this.state = {\n      isTestFinished: false,\n      disableYesNo: false,\n      isButtonDisabled: false,\n      test: props.test,\n      currentEarID: 0,\n      // 0=R starting\n      currentHzID: 0,\n      // 0=1000 starting \n      // (do not need to track dbID since changes based on the yes or no)\n      activeEar: 'R',\n      activeHertz: 1000,\n      activeDecible: 30\n    };\n  }\n\n  render() {\n    console.log(this.state.test);\n\n    if (this.state.isTestFinished) {\n      return /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"jumbotron bg-transparent\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Hearing Screening Complete!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Something about aknowledging this is a screening blah blah blah\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-check\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-check-input\",\n              type: \"checkbox\",\n              value: \"\",\n              id: \"soundSet50\",\n              onClick: () => {\n                this.props.disable();\n                this.props.passResults(this.state.test);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-check-label\",\n              htmlFor: \"soundSet50\",\n              children: \"I confirm above statement\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container text-center d-flex flex-column\",\n          children: [/*#__PURE__*/_jsxDEV(ToneDisplay, {\n            currentEar: this.state.activeEar // passing current ear\n            ,\n            currentHZ: this.state.activeHertz // passing current hz\n            ,\n            currentDB: this.state.activeDecible // passing current db\n            ,\n            timeOut: this.handleDisableBtnWithAudio,\n            isButtonDisabled: this.state.isButtonDisabled,\n            checkClick: this.handleDisableBtnUntilTone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-weight-light py-2 m-0\",\n            children: \"Do you hear this tone?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(AudioResponse, {\n            drop10: this.handleDrop // passing drop function\n            ,\n            increase5: this.handleIncrease // passing increase function\n            ,\n            isButtonDisabled: this.state.isButtonDisabled,\n            hasTonePlayed: this.state.disableYesNo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(WhatToDo, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-4\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-light font-weight-light\",\n                onClick: this.props.onModalRestart,\n                children: \"restart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }, this);\n    }\n  }\n\n}\n\nclass ToneDisplay extends Component {\n  render() {\n    // using the passed hz/db to concat different parts together for file path name\n    let ear = this.props.currentEar;\n    let hz = this.props.currentHZ;\n    let db = this.props.currentDB;\n    let boop = \"play\" + ear + hz + \"Hz\" + db;\n    let title = \"Right Ear - \";\n\n    if (ear === 'L') {\n      title = \"Left Ear - \";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: title + hz + \"Hz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(BoopButton, {\n          boop: boop,\n          clickDisable: this.props.timeOut,\n          disabled: this.props.isButtonDisabled,\n          hasClicked: this.props.checkClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass AudioResponse extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-inline-flex justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row py-2 mb-4 m-2 align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-dark text-nowrap screening-btn-hear\",\n            disabled: this.props.isButtonDisabled || this.props.hasTonePlayed,\n            onClick: this.props.increase5,\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"font-weight-light py-2 m-0\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-hand-thumbs-down text-black\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 65\n              }, this), \" No\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-info text-nowrap screening-btn-hear\",\n            disabled: this.props.isButtonDisabled || this.props.hasTonePlayed,\n            onClick: this.props.drop10,\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"font-weight-light py-2 m-0\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-hand-thumbs-up text-black\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 65\n              }, this), \" Yes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nfunction WhatToDo() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"px-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-transparent\",\n      type: \"link\",\n      id: \"informationPopover\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-0 font-weight-light\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-info-circle text-info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 54\n        }, this), \" What do I do?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(UncontrolledPopover, {\n      placement: \"bottom\",\n      target: \"informationPopover\",\n      children: /*#__PURE__*/_jsxDEV(PopoverBody, {\n        className: \"font-weight-light shadow text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"m-0 p-0\",\n          children: \"Hehehe steps\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 279,\n    columnNumber: 10\n  }, this);\n}\n\n_c = WhatToDo;\nexport default Audio;\n\nvar _c;\n\n$RefreshReg$(_c, \"WhatToDo\");","map":{"version":3,"sources":["/Users/michelleponting/Desktop/hearingtest/webpage/src/components/hearingtest/hearingscreening/screening_routes/Audio.js"],"names":["React","Component","UncontrolledPopover","PopoverBody","BoopButton","Audio","constructor","props","handleDisableBtnUntilTone","setState","handleDisableBtnWithAudio","getDecibleID","db","id","handleDrop","earID","state","currentEarID","hzID","currentHzID","activeDecible","dbID","test","hertz","ableToHear","decibles","hasPlayed","numHeard","numMissed","totalPlayed","hitRate","Number","toFixed","minThres","hzLevel","isTestFinished","activeEar","ear","activeHertz","handleIncrease","numOnlyNo","disableYesNo","isButtonDisabled","render","console","log","disable","passResults","onModalRestart","ToneDisplay","currentEar","hz","currentHZ","currentDB","boop","title","timeOut","checkClick","AudioResponse","hasTonePlayed","increase5","drop10","WhatToDo"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { UncontrolledPopover, PopoverBody } from 'reactstrap';\n\nimport { BoopButton } from './TonePlayback';\n\n// cp\nclass Audio extends Component {\n   constructor(props) {\n      super(props)\n      this.state = {\n         isTestFinished: false,\n         disableYesNo: false,\n         isButtonDisabled: false,\n         test: props.test,\n\n         currentEarID: 0, // 0=R starting\n         currentHzID: 0, // 0=1000 starting \n         // (do not need to track dbID since changes based on the yes or no)\n\n         activeEar: 'R',\n         activeHertz: 1000,\n         activeDecible: 30\n      }\n   }\n\n   handleDisableBtnUntilTone = () => {\n      this.setState({\n         //disableYesNo: false\n      });\n   }\n\n   handleDisableBtnWithAudio = () => {\n      // this.setState({\n      //    isButtonDisabled: true\n      // });\n\n      // // **** here's the timeout ****\n      // setTimeout(() => this.setState({ isButtonDisabled: false }), 3500);\n   }\n\n   // use activeDecible to then pass to this function to get array id\n   getDecibleID = (db) => {\n      let id = (db - 15) / 5;\n      return id;\n   }\n\n   // when you click yes\n   handleDrop = () => {\n      let earID = this.state.currentEarID;\n      let hzID = this.state.currentHzID;\n      let db = this.state.activeDecible;\n      let dbID = this.getDecibleID(db);\n\n      // test object copy\n      let test = [...this.state.test];\n\n      // check if first time hz has played\n      // !yes = update ableToHear for hz level to true\n      if (!test[earID].hertz[hzID].ableToHear) {\n         test[earID].hertz[hzID].ableToHear = true;\n      }\n\n      // check if this db has played before for this hz\n      // !yes = set hasPlayed for decible level to true\n      if (!test[earID].hertz[hzID].decibles[dbID].hasPlayed) {\n         test[earID].hertz[hzID].decibles[dbID].hasPlayed = true;\n      }\n\n      // overall things to update\n      // current db numHeard +1\n      test[earID].hertz[hzID].decibles[dbID].numHeard += 1;\n\n      // check numHeard + numMissed to tell if repeat or move on\n      let numHeard = test[earID].hertz[hzID].decibles[dbID].numHeard;\n      let numMissed = test[earID].hertz[hzID].decibles[dbID].numMissed;\n      let totalPlayed = numHeard + numMissed;\n      let hitRate = Number((numHeard / totalPlayed).toFixed(2));\n\n      // if at lowest dB then jump to the next hz\n      if (totalPlayed >= 2 && hitRate > .65) {\n         test[earID].hertz[hzID].minThres = db; // set min thres before moving on\n\n         if (earID === 1 && test[earID].hertz[hzID].hzLevel === 500) {\n            this.setState({\n               isTestFinished: true\n            });\n         } else {\n            if (test[earID].hertz[hzID].hzLevel !== 500) { // change hz\n               hzID += 1;\n               db = 30;\n\n            } else if (test[earID].hertz[hzID].hzLevel === 500) { // change ears\n               earID = 1;\n               hzID = 0;\n               db = 30;\n\n            }\n         }\n\n      } else if (db === 20) { // edge case\n         db -= 5;\n      } else if (db - 10 >= 15) { // drop case\n         db -= 10;\n      }\n\n      this.setState({\n         test: test,\n         currentEarID: earID,\n         currentHzID: hzID,\n         activeEar: this.state.test[earID].ear,\n         activeHertz: this.state.test[earID].hertz[hzID].hzLevel,\n         activeDecible: db,\n         //disableYesNo: true\n      });\n   };\n\n   // when you click no\n   handleIncrease = () => {\n\n      let earID = this.state.currentEarID;\n      let hzID = this.state.currentHzID;\n      let db = this.state.activeDecible;\n      let dbID = this.getDecibleID(db);\n\n      // test object copy\n      let test = [...this.state.test];\n\n      // overall things to update\n      // current db numMissed +1\n      test[earID].hertz[hzID].decibles[dbID].numMissed += 1;\n\n      // check first time hz played and unable to hear\n      // !hear = update numOnlyNo \n      if (!test[earID].hertz[hzID].ableToHear && db < 70) {\n         test[earID].hertz[hzID].numOnlyNo += 1;\n         db += 10;\n      } else if (db === 75) {\n\n         if (test[earID].hertz[hzID].hzLevel !== 500) { // next hz\n            db = 30;\n            hzID += 1;\n\n         } else if (earID === 1 && test[earID].hertz[hzID].hzLevel === 500) { // end test\n            this.setState({\n               isTestFinished: true\n            });\n         } else { // switch ears\n            earID = 1;\n            hzID = 0;\n            db = 30;\n         }\n\n      } else {\n         db += 5;\n      }\n\n      this.setState({\n         test: test,\n         currentEarID: earID,\n         currentHzID: hzID,\n         activeEar: this.state.test[earID].ear,\n         activeHertz: this.state.test[earID].hertz[hzID].hzLevel,\n         activeDecible: db,\n         //disableYesNo: true\n      });\n   };\n\n   render() {\n      console.log(this.state.test);\n      if (this.state.isTestFinished) {\n         return (\n            <main className=\"container\">\n               <div className=\"jumbotron bg-transparent\">\n                  <h3>Hearing Screening Complete!</h3>\n                  <p>Something about aknowledging this is a screening blah blah blah</p>\n                  <div className=\"form-check\">\n                     <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"soundSet50\" onClick={() => { this.props.disable(); this.props.passResults(this.state.test); }} />\n                     <label className=\"form-check-label\" htmlFor=\"soundSet50\">\n                        I confirm above statement\n                     </label>\n                  </div>\n               </div>\n            </main>\n         );\n      } else {\n         return (\n            <main>\n               <div className=\"container text-center d-flex flex-column\">\n                  <ToneDisplay\n                     currentEar={this.state.activeEar} // passing current ear\n                     currentHZ={this.state.activeHertz} // passing current hz\n                     currentDB={this.state.activeDecible} // passing current db\n                     timeOut={this.handleDisableBtnWithAudio}\n                     isButtonDisabled={this.state.isButtonDisabled}\n                     checkClick={this.handleDisableBtnUntilTone}\n                  />\n                  <h4 className=\"font-weight-light py-2 m-0\">Do you hear this tone?</h4>\n                  <AudioResponse\n                     drop10={this.handleDrop} // passing drop function\n                     increase5={this.handleIncrease} // passing increase function\n                     isButtonDisabled={this.state.isButtonDisabled}\n                     hasTonePlayed={this.state.disableYesNo}\n                  />\n                  <WhatToDo />\n                  <div className=\"row text-center\">\n                        <div className=\"col-4\"></div>\n                        <div className=\"col-4\">\n                            <button type=\"button\" className=\"btn btn-light font-weight-light\" onClick={this.props.onModalRestart}>restart</button>\n                        </div>\n                        <div className=\"col-4\"></div>\n                    </div>\n               </div>\n            </main>\n         );\n      }\n   }\n}\n\nclass ToneDisplay extends Component {\n   render() {\n      // using the passed hz/db to concat different parts together for file path name\n      let ear = this.props.currentEar;\n      let hz = this.props.currentHZ;\n      let db = this.props.currentDB;\n      let boop = (\"play\" + ear + hz + \"Hz\" + db);\n      let title = \"Right Ear - \";\n\n      if (ear === 'L') {\n         title = \"Left Ear - \";\n      }\n\n      return (\n         <div>\n            <h2>\n               {title + hz + \"Hz\"}\n            </h2>\n            <div className=\"d-flex justify-content-center\" >\n               <BoopButton\n                  boop={boop}\n                  clickDisable={this.props.timeOut}\n                  disabled={this.props.isButtonDisabled}\n                  hasClicked={this.props.checkClick}\n               />\n            </div>\n         </div>\n      );\n   }\n}\n\n\nclass AudioResponse extends Component {\n   render() {\n\n      return (\n         <div className=\"d-inline-flex justify-content-center\">\n            <div className=\"row py-2 mb-4 m-2 align-items-center\">\n               <div className=\"col\">\n                  <button type=\"button\" className=\"btn btn-dark text-nowrap screening-btn-hear\" disabled={this.props.isButtonDisabled || this.props.hasTonePlayed} onClick={this.props.increase5}>\n                     <h4 className=\"font-weight-light py-2 m-0\"><i className=\"bi bi-hand-thumbs-down text-black\"></i> No</h4>\n                  </button>\n\n               </div>\n\n               <div className=\"col\">\n\n                  <button type=\"button\" className=\"btn btn-info text-nowrap screening-btn-hear\" disabled={this.props.isButtonDisabled || this.props.hasTonePlayed} onClick={this.props.drop10}>\n                     <h4 className=\"font-weight-light py-2 m-0\"><i className=\"bi bi-hand-thumbs-up text-black\"></i> Yes</h4>\n                  </button>\n\n               </div>\n            </div>\n         </div>\n      );\n   }\n}\n\nfunction WhatToDo() {\n      return (\n         <div className=\"px-2\">\n            <button className=\"btn btn-transparent\" type=\"link\" id=\"informationPopover\">\n               <p className=\"mb-0 font-weight-light\"><i className=\"bi bi-info-circle text-info\"></i> What do I do?</p>\n            </button>\n            <UncontrolledPopover\n               placement=\"bottom\"\n               target=\"informationPopover\"\n            >\n               <PopoverBody className=\"font-weight-light shadow text-center\">\n                  <p className=\"m-0 p-0\">Hehehe steps</p>\n               </PopoverBody>\n            </UncontrolledPopover>\n         </div>\n      );\n   \n}\n\nexport default Audio;"]},"metadata":{},"sourceType":"module"}