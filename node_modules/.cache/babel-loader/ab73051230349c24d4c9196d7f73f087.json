{"ast":null,"code":"export var TEST=[{// key = 0\near:'R',hertz:[{hzLevel:1000,ableToHear:false,minThres:100,// set to arbitrary high value so that if hz heard and minThres met then will change\nnumOnlyNo:0,// number of No clicked before Yes highest possible = 10\ndecibles:[{decible:15,hasPlayed:false,numHeard:0,numMissed:0},{decible:20,hasPlayed:false,numHeard:0,numMissed:0},{decible:25,hasPlayed:false,numHeard:0,numMissed:0},{decible:30,hasPlayed:false,numHeard:0,numMissed:0},{decible:35,hasPlayed:false,numHeard:0,numMissed:0},{decible:40,hasPlayed:false,numHeard:0,numMissed:0},{decible:45,hasPlayed:false,numHeard:0,numMissed:0},{decible:50,hasPlayed:false,numHeard:0,numMissed:0},{decible:55,hasPlayed:false,numHeard:0,numMissed:0},{decible:60,hasPlayed:false,numHeard:0,numMissed:0},{decible:65,hasPlayed:false,numHeard:0,numMissed:0},{decible:70,hasPlayed:false,numHeard:0,numMissed:0},{decible:75,hasPlayed:false,numHeard:0,numMissed:0}]},{hzLevel:2000,ableToHear:false,minThres:100,// set to arbitrary high value so that if hz heard and minThres met then will change\nnumOnlyNo:0,// number of No clicked before Yes highest possible = 10\ndecibles:[{decible:15,hasPlayed:false,numHeard:0,numMissed:0},{decible:20,hasPlayed:false,numHeard:0,numMissed:0},{decible:25,hasPlayed:false,numHeard:0,numMissed:0},{decible:30,hasPlayed:false,numHeard:0,numMissed:0},{decible:35,hasPlayed:false,numHeard:0,numMissed:0},{decible:40,hasPlayed:false,numHeard:0,numMissed:0},{decible:45,hasPlayed:false,numHeard:0,numMissed:0},{decible:50,hasPlayed:false,numHeard:0,numMissed:0},{decible:55,hasPlayed:false,numHeard:0,numMissed:0},{decible:60,hasPlayed:false,numHeard:0,numMissed:0},{decible:65,hasPlayed:false,numHeard:0,numMissed:0},{decible:70,hasPlayed:false,numHeard:0,numMissed:0},{decible:75,hasPlayed:false,numHeard:0,numMissed:0}]},{hzLevel:4000,ableToHear:false,minThres:100,// set to arbitrary high value so that if hz heard and minThres met then will change\nnumOnlyNo:0,// number of No clicked before Yes highest possible = 10\ndecibles:[{decible:15,hasPlayed:false,numHeard:0,numMissed:0},{decible:20,hasPlayed:false,numHeard:0,numMissed:0},{decible:25,hasPlayed:false,numHeard:0,numMissed:0},{decible:30,hasPlayed:false,numHeard:0,numMissed:0},{decible:35,hasPlayed:false,numHeard:0,numMissed:0},{decible:40,hasPlayed:false,numHeard:0,numMissed:0},{decible:45,hasPlayed:false,numHeard:0,numMissed:0},{decible:50,hasPlayed:false,numHeard:0,numMissed:0},{decible:55,hasPlayed:false,numHeard:0,numMissed:0},{decible:60,hasPlayed:false,numHeard:0,numMissed:0},{decible:65,hasPlayed:false,numHeard:0,numMissed:0},{decible:70,hasPlayed:false,numHeard:0,numMissed:0},{decible:75,hasPlayed:false,numHeard:0,numMissed:0}]},{hzLevel:6000,ableToHear:false,minThres:100,// set to arbitrary high value so that if hz heard and minThres met then will change\nnumOnlyNo:0,// number of No clicked before Yes highest possible = 10\ndecibles:[{decible:15,hasPlayed:false,numHeard:0,numMissed:0},{decible:20,hasPlayed:false,numHeard:0,numMissed:0},{decible:25,hasPlayed:false,numHeard:0,numMissed:0},{decible:30,hasPlayed:false,numHeard:0,numMissed:0},{decible:35,hasPlayed:false,numHeard:0,numMissed:0},{decible:40,hasPlayed:false,numHeard:0,numMissed:0},{decible:45,hasPlayed:false,numHeard:0,numMissed:0},{decible:50,hasPlayed:false,numHeard:0,numMissed:0},{decible:55,hasPlayed:false,numHeard:0,numMissed:0},{decible:60,hasPlayed:false,numHeard:0,numMissed:0},{decible:65,hasPlayed:false,numHeard:0,numMissed:0},{decible:70,hasPlayed:false,numHeard:0,numMissed:0},{decible:75,hasPlayed:false,numHeard:0,numMissed:0}]},{hzLevel:1000,ableToHear:false,minThres:100,// set to arbitrary high value so that if hz heard and minThres met then will change\nnumOnlyNo:0,// number of No clicked before Yes highest possible = 10\ndecibles:[{decible:15,hasPlayed:false,numHeard:0,numMissed:0},{decible:20,hasPlayed:false,numHeard:0,numMissed:0},{decible:25,hasPlayed:false,numHeard:0,numMissed:0},{decible:30,hasPlayed:false,numHeard:0,numMissed:0},{decible:35,hasPlayed:false,numHeard:0,numMissed:0},{decible:40,hasPlayed:false,numHeard:0,numMissed:0},{decible:45,hasPlayed:false,numHeard:0,numMissed:0},{decible:50,hasPlayed:false,numHeard:0,numMissed:0},{decible:55,hasPlayed:false,numHeard:0,numMissed:0},{decible:60,hasPlayed:false,numHeard:0,numMissed:0},{decible:65,hasPlayed:false,numHeard:0,numMissed:0},{decible:70,hasPlayed:false,numHeard:0,numMissed:0},{decible:75,hasPlayed:false,numHeard:0,numMissed:0}]},{hzLevel:500,ableToHear:false,minThres:100,// set to arbitrary high value so that if hz heard and minThres met then will change\nnumOnlyNo:0,// number of No clicked before Yes highest possible = 10\ndecibles:[{decible:15,hasPlayed:false,numHeard:0,numMissed:0},{decible:20,hasPlayed:false,numHeard:0,numMissed:0},{decible:25,hasPlayed:false,numHeard:0,numMissed:0},{decible:30,hasPlayed:false,numHeard:0,numMissed:0},{decible:35,hasPlayed:false,numHeard:0,numMissed:0},{decible:40,hasPlayed:false,numHeard:0,numMissed:0},{decible:45,hasPlayed:false,numHeard:0,numMissed:0},{decible:50,hasPlayed:false,numHeard:0,numMissed:0},{decible:55,hasPlayed:false,numHeard:0,numMissed:0},{decible:60,hasPlayed:false,numHeard:0,numMissed:0},{decible:65,hasPlayed:false,numHeard:0,numMissed:0},{decible:70,hasPlayed:false,numHeard:0,numMissed:0},{decible:75,hasPlayed:false,numHeard:0,numMissed:0}]}]},{// key = 1\near:'L',hertz:[{hzLevel:1000,ableToHear:false,minThres:100,// set to arbitrary high value so that if hz heard and minThres met then will change\nnumOnlyNo:0,// number of No clicked before Yes highest possible = 10\ndecibles:[{decible:15,hasPlayed:false,numHeard:0,numMissed:0},{decible:20,hasPlayed:false,numHeard:0,numMissed:0},{decible:25,hasPlayed:false,numHeard:0,numMissed:0},{decible:30,hasPlayed:false,numHeard:0,numMissed:0},{decible:35,hasPlayed:false,numHeard:0,numMissed:0},{decible:40,hasPlayed:false,numHeard:0,numMissed:0},{decible:45,hasPlayed:false,numHeard:0,numMissed:0},{decible:50,hasPlayed:false,numHeard:0,numMissed:0},{decible:55,hasPlayed:false,numHeard:0,numMissed:0},{decible:60,hasPlayed:false,numHeard:0,numMissed:0},{decible:65,hasPlayed:false,numHeard:0,numMissed:0},{decible:70,hasPlayed:false,numHeard:0,numMissed:0},{decible:75,hasPlayed:false,numHeard:0,numMissed:0}]},{hzLevel:2000,ableToHear:false,minThres:100,// set to arbitrary high value so that if hz heard and minThres met then will change\nnumOnlyNo:0,// number of No clicked before Yes highest possible = 10\ndecibles:[{decible:15,hasPlayed:false,numHeard:0,numMissed:0},{decible:20,hasPlayed:false,numHeard:0,numMissed:0},{decible:25,hasPlayed:false,numHeard:0,numMissed:0},{decible:30,hasPlayed:false,numHeard:0,numMissed:0},{decible:35,hasPlayed:false,numHeard:0,numMissed:0},{decible:40,hasPlayed:false,numHeard:0,numMissed:0},{decible:45,hasPlayed:false,numHeard:0,numMissed:0},{decible:50,hasPlayed:false,numHeard:0,numMissed:0},{decible:55,hasPlayed:false,numHeard:0,numMissed:0},{decible:60,hasPlayed:false,numHeard:0,numMissed:0},{decible:65,hasPlayed:false,numHeard:0,numMissed:0},{decible:70,hasPlayed:false,numHeard:0,numMissed:0},{decible:75,hasPlayed:false,numHeard:0,numMissed:0}]},{hzLevel:4000,ableToHear:false,minThres:100,// set to arbitrary high value so that if hz heard and minThres met then will change\nnumOnlyNo:0,// number of No clicked before Yes highest possible = 10\ndecibles:[{decible:15,hasPlayed:false,numHeard:0,numMissed:0},{decible:20,hasPlayed:false,numHeard:0,numMissed:0},{decible:25,hasPlayed:false,numHeard:0,numMissed:0},{decible:30,hasPlayed:false,numHeard:0,numMissed:0},{decible:35,hasPlayed:false,numHeard:0,numMissed:0},{decible:40,hasPlayed:false,numHeard:0,numMissed:0},{decible:45,hasPlayed:false,numHeard:0,numMissed:0},{decible:50,hasPlayed:false,numHeard:0,numMissed:0},{decible:55,hasPlayed:false,numHeard:0,numMissed:0},{decible:60,hasPlayed:false,numHeard:0,numMissed:0},{decible:65,hasPlayed:false,numHeard:0,numMissed:0},{decible:70,hasPlayed:false,numHeard:0,numMissed:0},{decible:75,hasPlayed:false,numHeard:0,numMissed:0}]},{hzLevel:6000,ableToHear:false,minThres:100,// set to arbitrary high value so that if hz heard and minThres met then will change\nnumOnlyNo:0,// number of No clicked before Yes highest possible = 10\ndecibles:[{decible:15,hasPlayed:false,numHeard:0,numMissed:0},{decible:20,hasPlayed:false,numHeard:0,numMissed:0},{decible:25,hasPlayed:false,numHeard:0,numMissed:0},{decible:30,hasPlayed:false,numHeard:0,numMissed:0},{decible:35,hasPlayed:false,numHeard:0,numMissed:0},{decible:40,hasPlayed:false,numHeard:0,numMissed:0},{decible:45,hasPlayed:false,numHeard:0,numMissed:0},{decible:50,hasPlayed:false,numHeard:0,numMissed:0},{decible:55,hasPlayed:false,numHeard:0,numMissed:0},{decible:60,hasPlayed:false,numHeard:0,numMissed:0},{decible:65,hasPlayed:false,numHeard:0,numMissed:0},{decible:70,hasPlayed:false,numHeard:0,numMissed:0},{decible:75,hasPlayed:false,numHeard:0,numMissed:0}]},{hzLevel:500,ableToHear:false,minThres:100,// set to arbitrary high value so that if hz heard and minThres met then will change\nnumOnlyNo:0,// number of No clicked before Yes highest possible = 10\ndecibles:[{decible:15,hasPlayed:false,numHeard:0,numMissed:0},{decible:20,hasPlayed:false,numHeard:0,numMissed:0},{decible:25,hasPlayed:false,numHeard:0,numMissed:0},{decible:30,hasPlayed:false,numHeard:0,numMissed:0},{decible:35,hasPlayed:false,numHeard:0,numMissed:0},{decible:40,hasPlayed:false,numHeard:0,numMissed:0},{decible:45,hasPlayed:false,numHeard:0,numMissed:0},{decible:50,hasPlayed:false,numHeard:0,numMissed:0},{decible:55,hasPlayed:false,numHeard:0,numMissed:0},{decible:60,hasPlayed:false,numHeard:0,numMissed:0},{decible:65,hasPlayed:false,numHeard:0,numMissed:0},{decible:70,hasPlayed:false,numHeard:0,numMissed:0},{decible:75,hasPlayed:false,numHeard:0,numMissed:0}]}]}];","map":{"version":3,"sources":["/Users/michelleponting/Desktop/Sound-Sustainability-Virtual-Hearing-Test/src/components/hearingtest/hearingscreening/screening_routes/TestConstant.js"],"names":["TEST","ear","hertz","hzLevel","ableToHear","minThres","numOnlyNo","decibles","decible","hasPlayed","numHeard","numMissed"],"mappings":"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","sourcesContent":["export const TEST = [\n    { // key = 0\n        ear: 'R',\n        hertz: [\n            {\n                hzLevel: 1000,\n                ableToHear: false,\n                minThres: 100, // set to arbitrary high value so that if hz heard and minThres met then will change\n                numOnlyNo: 0, // number of No clicked before Yes highest possible = 10\n                decibles: [\n                    { decible: 15, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 20, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 25, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 30, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 35, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 40, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 45, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 50, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 55, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 60, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 65, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 70, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 75, hasPlayed: false, numHeard: 0, numMissed: 0 }\n                ]\n            },\n            {\n                hzLevel: 2000,\n                ableToHear: false,\n                minThres: 100, // set to arbitrary high value so that if hz heard and minThres met then will change\n                numOnlyNo: 0, // number of No clicked before Yes highest possible = 10\n                decibles: [\n                    { decible: 15, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 20, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 25, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 30, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 35, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 40, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 45, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 50, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 55, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 60, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 65, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 70, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 75, hasPlayed: false, numHeard: 0, numMissed: 0 }\n                ]\n            },\n            {\n                hzLevel: 4000,\n                ableToHear: false,\n                minThres: 100, // set to arbitrary high value so that if hz heard and minThres met then will change\n                numOnlyNo: 0, // number of No clicked before Yes highest possible = 10\n                decibles: [\n                    { decible: 15, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 20, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 25, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 30, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 35, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 40, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 45, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 50, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 55, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 60, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 65, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 70, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 75, hasPlayed: false, numHeard: 0, numMissed: 0 }\n                ]\n            },\n            {\n                hzLevel: 6000,\n                ableToHear: false,\n                minThres: 100, // set to arbitrary high value so that if hz heard and minThres met then will change\n                numOnlyNo: 0, // number of No clicked before Yes highest possible = 10\n                decibles: [\n                    { decible: 15, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 20, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 25, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 30, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 35, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 40, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 45, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 50, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 55, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 60, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 65, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 70, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 75, hasPlayed: false, numHeard: 0, numMissed: 0 }\n                ]\n            },\n            {\n                hzLevel: 1000,\n                ableToHear: false,\n                minThres: 100, // set to arbitrary high value so that if hz heard and minThres met then will change\n                numOnlyNo: 0, // number of No clicked before Yes highest possible = 10\n                decibles: [\n                    { decible: 15, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 20, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 25, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 30, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 35, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 40, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 45, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 50, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 55, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 60, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 65, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 70, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 75, hasPlayed: false, numHeard: 0, numMissed: 0 }\n                ]\n            },\n            {\n                hzLevel: 500,\n                ableToHear: false,\n                minThres: 100, // set to arbitrary high value so that if hz heard and minThres met then will change\n                numOnlyNo: 0, // number of No clicked before Yes highest possible = 10\n                decibles: [\n                    { decible: 15, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 20, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 25, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 30, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 35, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 40, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 45, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 50, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 55, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 60, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 65, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 70, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 75, hasPlayed: false, numHeard: 0, numMissed: 0 }\n                ]\n            },\n        ]\n    },\n    { // key = 1\n        ear: 'L',\n        hertz: [\n            {\n                hzLevel: 1000,\n                ableToHear: false,\n                minThres: 100, // set to arbitrary high value so that if hz heard and minThres met then will change\n                numOnlyNo: 0, // number of No clicked before Yes highest possible = 10\n                decibles: [\n                    { decible: 15, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 20, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 25, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 30, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 35, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 40, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 45, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 50, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 55, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 60, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 65, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 70, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 75, hasPlayed: false, numHeard: 0, numMissed: 0 }\n                ]\n            },\n            {\n                hzLevel: 2000,\n                ableToHear: false,\n                minThres: 100, // set to arbitrary high value so that if hz heard and minThres met then will change\n                numOnlyNo: 0, // number of No clicked before Yes highest possible = 10\n                decibles: [\n                    { decible: 15, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 20, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 25, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 30, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 35, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 40, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 45, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 50, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 55, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 60, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 65, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 70, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 75, hasPlayed: false, numHeard: 0, numMissed: 0 }\n                ]\n            },\n            {\n                hzLevel: 4000,\n                ableToHear: false,\n                minThres: 100, // set to arbitrary high value so that if hz heard and minThres met then will change\n                numOnlyNo: 0, // number of No clicked before Yes highest possible = 10\n                decibles: [\n                    { decible: 15, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 20, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 25, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 30, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 35, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 40, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 45, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 50, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 55, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 60, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 65, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 70, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 75, hasPlayed: false, numHeard: 0, numMissed: 0 }\n                ]\n            },\n            {\n                hzLevel: 6000,\n                ableToHear: false,\n                minThres: 100, // set to arbitrary high value so that if hz heard and minThres met then will change\n                numOnlyNo: 0, // number of No clicked before Yes highest possible = 10\n                decibles: [\n                    { decible: 15, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 20, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 25, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 30, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 35, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 40, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 45, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 50, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 55, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 60, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 65, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 70, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 75, hasPlayed: false, numHeard: 0, numMissed: 0 }\n                ]\n            },\n            {\n                hzLevel: 500,\n                ableToHear: false,\n                minThres: 100, // set to arbitrary high value so that if hz heard and minThres met then will change\n                numOnlyNo: 0, // number of No clicked before Yes highest possible = 10\n                decibles: [\n                    { decible: 15, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 20, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 25, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 30, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 35, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 40, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 45, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 50, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 55, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 60, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 65, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 70, hasPlayed: false, numHeard: 0, numMissed: 0 },\n                    { decible: 75, hasPlayed: false, numHeard: 0, numMissed: 0 }\n                ]\n            },\n        ]\n    }\n];"]},"metadata":{},"sourceType":"module"}