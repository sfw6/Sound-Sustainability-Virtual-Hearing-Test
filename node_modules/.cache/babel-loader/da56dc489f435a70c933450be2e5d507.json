{"ast":null,"code":"var _jsxFileName = \"/Users/michelleponting/Desktop/hearingtest/webpage/src/components/hearingscreening/screening_routes/audio.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tones = [{\n  id: 0,\n  hertz: 500\n}, {\n  id: 1,\n  hertz: 1000\n}];\nconst pathStart = \"audio_tones/\";\nconst pathEnd = \".png\";\n\nclass Audio extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tones: [],\n      activeTone: 0,\n      // for testing purposes it is set here\n      activeHertz: 500,\n      // for testing purposes it is set here\n      activeDecible: 35 // for testing purposes it is set here\n\n    };\n\n    this.handleDrop = () => {\n      let idx = this.state.activeTone;\n      let db = this.state.activeDecible; // if at lowest dB then jump to the next hz\n\n      if (db - 10 < 20) {\n        if (db === 25) {\n          // if case where db is at 25 so can still go down but not by 10\n          console.log(\"was at 25 now dropping 5dB\");\n          db -= 5;\n          this.setState({\n            activeDecible: db\n          });\n        } else if (idx === 1) {\n          // case where cannot go down any lower and cannot go to a higher hz\n          console.log(\"would break to go any lower\");\n        } else {\n          console.log(\"next hz\");\n          idx += 1;\n          this.setState({\n            activeTone: idx,\n            activeHertz: this.state.tones[idx].hertz,\n            activeDecible: 35 // for testing purposes it is set here\n\n          });\n        }\n      } else {\n        // drop by 10 db\n        console.log(\"dropping 10dB\");\n        db -= 10;\n        this.setState({\n          activeDecible: db\n        });\n      }\n    };\n\n    this.handleIncrease = () => {\n      let idx = this.state.activeTone;\n      let db = this.state.activeDecible; // if at highest dB then jump to the next hz\n\n      if (db === 50) {\n        if (idx === 1) {\n          // case where cannot go up any higher and cannot go to a higher hz\n          console.log(\"now at highest db for highest hz\");\n        } else {\n          console.log(\"next hz\");\n          idx += 1;\n          this.setState({\n            activeTone: idx,\n            activeHertz: this.state.tones[idx].hertz,\n            activeDecible: 35 // for testing purposes it is set here\n\n          });\n        }\n      } else {\n        // go up by 5db\n        console.log(\"up by 5dB\");\n        db += 5;\n        this.setState({\n          activeDecible: db\n        });\n      }\n    };\n\n    this.handleReplay = () => {\n      console.log(\"replay -- reset at lowest hz/db combo\");\n      this.setState({\n        activeTone: 0,\n        // for testing purposes it is set here\n        activeHertz: 500,\n        // for testing purposes it is set here\n        activeDecible: 20 // for testing purposes it is set here\n\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      tones: tones\n    });\n  } // when you click yes\n\n\n  render() {\n    // for testing\n    console.log(this.state.activeTone);\n    console.log(this.state.activeHertz);\n    console.log(this.state.activeDecible);\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container text-center d-flex flex-column\",\n        children: [/*#__PURE__*/_jsxDEV(ToneDisplay, {\n          currentHZ: this.state.activeHertz // passing current hz\n          ,\n          currentDB: this.state.activeDecible // passing current db\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"font-weight-light py-2 m-0\",\n          children: \"Do you hear this tone?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(AudioResponse, {\n          drop10: this.handleDrop // passing drop function\n          ,\n          increase5: this.handleIncrease // passing increase function\n          ,\n          replay: this.handleReplay // passing replay function (currently resetting hz/db)\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass ToneDisplay extends Component {\n  render() {\n    // using the passed hz/db to concat different parts together for file path name\n    let hz = \"Hz\" + this.props.currentHZ;\n    let db = \"dB\" + this.props.currentDB;\n    console.log(hz + db);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: pathStart + hz + db + pathEnd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: pathStart + hz + db + pathEnd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass AudioResponse extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-inline-flex justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row py-2 mb-4 m-2 align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-dark text-nowrap screening-btn-hear\",\n            onClick: this.props.increase5,\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-hand-thumbs-down text-black\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 22\n            }, this), \" No\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn\",\n          onClick: this.props.replay,\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"mb-0\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-arrow-repeat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-info text-nowrap screening-btn-hear\",\n            onClick: this.props.drop10,\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-hand-thumbs-up text-black\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 22\n            }, this), \" Yes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 10\n    }, this);\n  }\n\n} // class FinishScreening extends Component {\n//    render() {\n//       return (\n//          <div>\n//             <button type=\"button\" className=\"btn btn-success\">Finished</button>\n//          </div>\n//       );\n//    }\n// }\n\n\nexport default Audio;","map":{"version":3,"sources":["/Users/michelleponting/Desktop/hearingtest/webpage/src/components/hearingscreening/screening_routes/audio.js"],"names":["React","Component","tones","id","hertz","pathStart","pathEnd","Audio","state","activeTone","activeHertz","activeDecible","handleDrop","idx","db","console","log","setState","handleIncrease","handleReplay","componentDidMount","render","ToneDisplay","hz","props","currentHZ","currentDB","AudioResponse","increase5","replay","drop10"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nconst tones = [\n   {\n      id: 0,\n      hertz: 500\n   },\n   {\n      id: 1,\n      hertz: 1000\n   },\n];\n\nconst pathStart = \"audio_tones/\";\nconst pathEnd = \".png\";\n\nclass Audio extends Component {\n   state = {\n      tones: [],\n      activeTone: 0, // for testing purposes it is set here\n      activeHertz: 500, // for testing purposes it is set here\n      activeDecible: 35 // for testing purposes it is set here\n   }\n\n   componentDidMount() {\n      this.setState({ tones: tones });\n   }\n\n   // when you click yes\n   handleDrop = () => {\n      let idx = this.state.activeTone;\n      let db = this.state.activeDecible;\n\n      // if at lowest dB then jump to the next hz\n      if (db - 10 < 20) {\n         \n         if (db === 25) { // if case where db is at 25 so can still go down but not by 10\n            console.log(\"was at 25 now dropping 5dB\");\n            db -= 5;\n            this.setState({\n               activeDecible: db\n            });\n         } else if (idx === 1) { // case where cannot go down any lower and cannot go to a higher hz\n            console.log(\"would break to go any lower\");\n         } else {\n            console.log(\"next hz\");\n            idx += 1;\n            this.setState({\n               activeTone: idx, \n               activeHertz: this.state.tones[idx].hertz, \n               activeDecible: 35 // for testing purposes it is set here\n            });\n         }\n      } else { // drop by 10 db\n         console.log(\"dropping 10dB\");\n         db -= 10;\n         this.setState({\n            activeDecible: db\n         });\n      }\n   };\n\n   // when you click no\n   handleIncrease = () => {\n      let idx = this.state.activeTone;\n      let db = this.state.activeDecible;\n\n      // if at highest dB then jump to the next hz\n      if (db === 50) {\n         \n         if (idx === 1) { // case where cannot go up any higher and cannot go to a higher hz\n            console.log(\"now at highest db for highest hz\")\n         } else {\n            console.log(\"next hz\")\n            idx += 1;\n            this.setState({\n               activeTone: idx, \n               activeHertz: this.state.tones[idx].hertz, \n               activeDecible: 35 // for testing purposes it is set here\n            });\n         }\n      } else { // go up by 5db\n         console.log(\"up by 5dB\")\n         db += 5;\n         this.setState({\n            activeDecible: db\n         });\n      }\n   };\n\n   // currently only restarting at 500hz and 20 db\n   handleReplay = () => {\n      console.log(\"replay -- reset at lowest hz/db combo\")\n      this.setState({\n         activeTone: 0, // for testing purposes it is set here\n         activeHertz: 500, // for testing purposes it is set here\n         activeDecible: 20 // for testing purposes it is set here\n      });\n   };\n\n   render() {\n\n      // for testing\n      console.log(this.state.activeTone);\n      console.log(this.state.activeHertz);\n      console.log(this.state.activeDecible);\n\n      return (\n         <main>\n            <div className=\"container text-center d-flex flex-column\">\n               <ToneDisplay \n                  currentHZ={this.state.activeHertz} // passing current hz\n                  currentDB={this.state.activeDecible} // passing current db\n               />\n               <h4 className=\"font-weight-light py-2 m-0\">Do you hear this tone?</h4>\n               <AudioResponse \n                  drop10={this.handleDrop} // passing drop function\n                  increase5={this.handleIncrease} // passing increase function\n                  replay={this.handleReplay} // passing replay function (currently resetting hz/db)\n               />\n             </div>\n         </main>\n      );\n   }\n}\n\nclass ToneDisplay extends Component {\n   render() {\n      // using the passed hz/db to concat different parts together for file path name\n      let hz = \"Hz\" + this.props.currentHZ\n      let db = \"dB\" + this.props.currentDB\n      console.log(hz + db)\n      return (\n         <div>\n            <img src={pathStart + hz + db + pathEnd} />\n            <p>{pathStart + hz + db + pathEnd}</p>\n         </div>\n      );\n   }\n}\n\nclass AudioResponse extends Component {\n   render() {\n      return (\n         <div className=\"d-inline-flex justify-content-center\">\n            <div className=\"row py-2 mb-4 m-2 align-items-center\">\n               <div className=\"col\">\n\n                  {/* onClick= functionality traces back to main component to run function */}\n                  <button type=\"button\" className=\"btn btn-dark text-nowrap screening-btn-hear\" onClick={this.props.increase5}> \n                     <i className=\"bi bi-hand-thumbs-down text-black\"></i> No\n                  </button>\n\n               </div>\n               <button type=\"button\" className=\"btn\" onClick={this.props.replay}>\n                  <h3 className=\"mb-0\"><i className=\"bi bi-arrow-repeat\"></i></h3>\n               </button>\n               <div className=\"col\">\n                  \n                  <button type=\"button\" className=\"btn btn-info text-nowrap screening-btn-hear\" onClick={this.props.drop10}>\n                     <i className=\"bi bi-hand-thumbs-up text-black\"></i> Yes\n                  </button>\n\n               </div>\n            </div>\n         </div>\n      );\n   }\n}\n\n// class FinishScreening extends Component {\n//    render() {\n//       return (\n//          <div>\n//             <button type=\"button\" className=\"btn btn-success\">Finished</button>\n//          </div>\n//       );\n//    }\n// }\n\nexport default Audio;"]},"metadata":{},"sourceType":"module"}