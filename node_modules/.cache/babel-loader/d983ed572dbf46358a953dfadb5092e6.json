{"ast":null,"code":"var _jsxFileName = \"/Users/michelleponting/Desktop/hearingtest/webpage/src/components/hearingscreening/Screening.js\";\nimport React, { Component } from 'react';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\nimport Audio from './screening_routes/audio';\nimport Calibration from './screening_routes/calibration';\nimport Instructions from './screening_routes/instructions';\nimport Results from './screening_routes/results'; // const instructions = ({ Instructions }) => <span>{Instructions}</span>\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  id: '0',\n  title: 'Instructions',\n  stagePercent: '0',\n  component: /*#__PURE__*/_jsxDEV(\"span\", {\n    children: Instructions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 20\n  }, this)\n}, {\n  id: '1',\n  title: 'Calibration',\n  stagePercent: '33',\n  component: /*#__PURE__*/_jsxDEV(\"span\", {\n    children: Calibration\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 20\n  }, this)\n}, {\n  id: '2',\n  title: 'Hearing Screening',\n  stagePercent: '66',\n  component: /*#__PURE__*/_jsxDEV(\"span\", {\n    children: Audio\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 20\n  }, this)\n}, {\n  id: '3',\n  title: 'Results',\n  stagePercent: '100',\n  component: /*#__PURE__*/_jsxDEV(\"span\", {\n    children: Results\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 20\n  }, this)\n}];\n/*\n    Adapted from :ReactJS: Dynamic Previous/Next Buttons\n    desc: Retrieve previous & next titles and return them as component props.\n    author: alpha1337\n    https://codesandbox.io/s/rk360yxz?file=/index.js:3135-3772\n*/\n\nclass AudioScreening extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      stages: [],\n      activeStage: '',\n      modalTitle: '',\n      modalPercentage: '',\n      modalComponent: ''\n    };\n\n    this.handleModalOpen = idx => {\n      this.setState({\n        activeStage: idx,\n        modalTitle: this.state.stages[idx].title,\n        modalPercentage: this.state.stages[idx].stagePercent,\n        modalComponent: this.state.stages[idx].component\n      });\n    };\n\n    this.handleModalRestart = () => {\n      this.setState({\n        activeStage: ''\n      });\n    };\n\n    this.handleNextProject = () => {\n      var arr = this.state.stages.length;\n      var idx = this.state.activeStage + 1;\n      var idx = idx % arr;\n      this.setState({\n        activeStage: idx,\n        modalTitle: this.state.stages[idx].title,\n        modalPercentage: this.state.stages[idx].stagePercent,\n        modalComponent: this.state.stages[idx].component\n      });\n    };\n\n    this.handlePrevProject = () => {\n      var arr = this.state.stages.length;\n      var idx = this.state.activeStage;\n\n      if (idx === 0) {\n        var idx = arr - 1;\n      } else {\n        var idx = idx - 1;\n      }\n\n      this.setState({\n        activeStage: idx,\n        modalTitle: this.state.stages[idx].title,\n        modalPercentage: this.state.stages[idx].stagePercent,\n        modalComponent: this.state.stages[idx].component\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      stages: data\n    });\n  }\n\n  render() {\n    function nextStage(idx, arr) {\n      var i = idx + 1;\n      var i = i % arr.length;\n      return arr[i].title;\n    }\n\n    function prevStage(idx, arr) {\n      if (idx === 0) {\n        var i = arr.length - 1;\n      } else {\n        var i = idx - 1;\n      }\n\n      return arr[i].title;\n    }\n\n    const projectComponents = data.map((data, idx) => /*#__PURE__*/_jsxDEV(Project, {\n      index: idx,\n      title: data.title,\n      onModalOpen: this.handleModalOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this));\n\n    if (this.state.activeStage === '') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Progress, {\n          percentage: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Click on a project below to view details.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-secondary\",\n          onClick: this.handleModalOpen.bind(this, 1),\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Progress, {\n          percentage: this.state.modalPercentage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          title: this.state.modalTitle,\n          stagePercent: this.state.modalPercentage,\n          previousStage: prevStage(this.state.activeStage, data),\n          nextStage: nextStage(this.state.activeStage, data),\n          onModalRestart: this.handleModalRestart,\n          onNext: this.handleNextProject,\n          onPrev: this.handlePrevProject\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nclass Modal extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: this.props.stagePercent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: this.props.onPrev,\n        children: [\"Previous: \", this.props.previousStage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary\",\n        onClick: this.props.onModalRestart,\n        children: \"restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: this.props.onNext,\n        children: [\"Next: \", this.props.nextStage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Project extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: this.props.onModalOpen.bind(this, this.props.index)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Breadcrumbs extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"nav\", {\n      \"aria-label\": \"breadcrumb\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"breadcrumb bg-transparent font-weight-light\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"text-danger\",\n            href: \"/\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"text-danger\",\n            href: \"/screeninghome\",\n            children: \"Screening Info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item active\",\n          \"aria-current\": \"page\",\n          children: \"Screening\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Progress extends Component {\n  render() {\n    let now = this.props.percentage;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"font-weight-light\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"font-weight-light mb-1\",\n        children: \"Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        now: now,\n        label: `${now}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AudioScreening;","map":{"version":3,"sources":["/Users/michelleponting/Desktop/hearingtest/webpage/src/components/hearingscreening/Screening.js"],"names":["React","Component","ProgressBar","Audio","Calibration","Instructions","Results","data","id","title","stagePercent","component","AudioScreening","state","stages","activeStage","modalTitle","modalPercentage","modalComponent","handleModalOpen","idx","setState","handleModalRestart","handleNextProject","arr","length","handlePrevProject","componentDidMount","render","nextStage","i","prevStage","projectComponents","map","bind","Modal","props","onPrev","previousStage","onModalRestart","onNext","Project","onModalOpen","index","Breadcrumbs","Progress","now","percentage"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport ProgressBar from 'react-bootstrap/ProgressBar'\n\nimport Audio from './screening_routes/audio';\nimport Calibration from './screening_routes/calibration';\nimport Instructions from './screening_routes/instructions';\nimport Results from './screening_routes/results';\n\n// const instructions = ({ Instructions }) => <span>{Instructions}</span>\n\nconst data = [\n    {\n        id: '0',\n        title: 'Instructions',\n        stagePercent: '0',\n        component: <span>{Instructions}</span>\n    },\n    {\n        id: '1',\n        title: 'Calibration',\n        stagePercent: '33',\n        component: <span>{Calibration}</span>\n    },\n    {\n        id: '2',\n        title: 'Hearing Screening',\n        stagePercent: '66',\n        component: <span>{Audio}</span>\n    },\n    {\n        id: '3',\n        title: 'Results',\n        stagePercent: '100',\n        component: <span>{Results}</span>\n    },\n  ];\n\n/*\n    Adapted from :ReactJS: Dynamic Previous/Next Buttons\n    desc: Retrieve previous & next titles and return them as component props.\n    author: alpha1337\n    https://codesandbox.io/s/rk360yxz?file=/index.js:3135-3772\n*/\nclass AudioScreening extends Component {\n    state = {\n        stages: [],\n        activeStage: '',\n        modalTitle: '',\n        modalPercentage: '',\n        modalComponent: ''\n    }\n\n    componentDidMount() {\n        this.setState({ stages: data });\n    }\n\n    handleModalOpen = (idx) => {\n        this.setState({\n            activeStage: idx,\n            modalTitle: this.state.stages[idx].title,\n            modalPercentage: this.state.stages[idx].stagePercent,\n            modalComponent: this.state.stages[idx].component\n        });\n    };\n\n    handleModalRestart = () => {\n        this.setState({\n            activeStage: ''\n        });\n    };\n\n    handleNextProject = () => {\n\n        var arr = this.state.stages.length;\n        var idx = this.state.activeStage + 1;\n        var idx = idx % arr;\n\n        this.setState({\n            activeStage: idx,\n            modalTitle: this.state.stages[idx].title,\n            modalPercentage: this.state.stages[idx].stagePercent,\n            modalComponent: this.state.stages[idx].component\n        });\n    }\n\n    handlePrevProject = () => {\n        var arr = this.state.stages.length;\n        var idx = this.state.activeStage;\n\n        if (idx === 0) {\n            var idx = arr - 1;\n        } else {\n            var idx = idx - 1;\n        }\n\n        this.setState({\n            activeStage: idx,\n            modalTitle: this.state.stages[idx].title,\n            modalPercentage: this.state.stages[idx].stagePercent,\n            modalComponent: this.state.stages[idx].component\n        });\n    }\n\n    render() {\n        \n        function nextStage(idx, arr) {\n            var i = idx + 1;\n            var i = i % arr.length;\n            return arr[i].title;\n        }\n\n        function prevStage(idx, arr) {\n            if (idx === 0) {\n                var i = arr.length - 1;\n            } else {\n                var i = idx - 1;\n            }\n            return arr[i].title;\n        }\n\n        const projectComponents = data.map((data, idx) =>\n            <Project\n                index={idx}\n                title={data.title}\n                onModalOpen={this.handleModalOpen}\n            />,\n        );\n\n        if (this.state.activeStage === '') {\n            return (\n                <div>\n                    <Breadcrumbs />\n                    <Progress percentage=\"0\"></Progress>\n                    <h3>Click on a project below to view details.</h3>\n                    {/* {projectComponents} */}\n                    <button type=\"button\" className=\"btn btn-secondary\" \n                        onClick={this.handleModalOpen.bind(this, 1)}>\n                            \n                        Next\n                    </button>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <Breadcrumbs />\n                    <Progress percentage={this.state.modalPercentage}></Progress>\n                    <Modal\n                        title={this.state.modalTitle}\n                        stagePercent={this.state.modalPercentage}\n                        previousStage={prevStage(this.state.activeStage, data)}\n                        nextStage={nextStage(this.state.activeStage, data)}\n                        onModalRestart={this.handleModalRestart}\n                        onNext={this.handleNextProject}\n                        onPrev={this.handlePrevProject}\n                    />\n                </div>\n            );\n        }\n    }\n}\n\n\nclass Modal extends React.Component {\n    render() {\n        return (\n            <div>\n                <h1>{this.props.title}</h1>\n                <h3>{this.props.stagePercent}</h3>\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.props.onPrev}>Previous: {this.props.previousStage}</button>\n                <button type=\"button\" className=\"btn btn-secondary\" onClick={this.props.onModalRestart}>restart</button>\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.props.onNext}>Next: {this.props.nextStage}</button>\n            </div>\n        );\n    }\n}\n\nclass Project extends React.Component {\n    render() {\n        return (\n            <div onClick={this.props.onModalOpen.bind(this, this.props.index)}>\n            </div>\n        );\n    }\n}\n\nclass Breadcrumbs extends Component {\n    render() {\n        return (\n            <nav aria-label=\"breadcrumb\">\n                <ol className=\"breadcrumb bg-transparent font-weight-light\">\n                    <li className=\"breadcrumb-item\"><a className=\"text-danger\" href=\"/\">Home</a></li>\n                    <li className=\"breadcrumb-item\"><a className=\"text-danger\" href=\"/screeninghome\">Screening Info</a></li>\n                    <li className=\"breadcrumb-item active\" aria-current=\"page\">Screening</li>\n                </ol>\n            </nav>\n        );\n    }\n}\n\nclass Progress extends Component {\n    render() {\n        let now = this.props.percentage\n\n        return (\n            <div className=\"font-weight-light\">\n                <h5 className=\"font-weight-light mb-1\">Progress</h5> \n                <ProgressBar now={now} label={`${now}%`} />\n            </div>\n        );\n    }\n}\n\nexport default AudioScreening;"]},"metadata":{},"sourceType":"module"}