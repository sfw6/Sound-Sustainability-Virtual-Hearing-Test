{"ast":null,"code":"var _jsxFileName = \"/Users/michelleponting/Desktop/hearingtest/webpage/src/components/hearingtest/hearingscreening/screening_routes/Results.js\";\nimport React, { Component } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst labels = [0, 500, 1000, 2000, 4000, 6000];\n\nclass Results extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container-fluid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-6\",\n          children: /*#__PURE__*/_jsxDEV(LineChart, {\n            testResults: this.props.testResults\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"What Do My Results Mean?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Note that your results are not a medical diagnosis of your hearing levels, but they can provide information about your hearing levels that could encourage you to schedule an appointment with an audiologist. \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Your results will be displayed as an \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-weight-bold\",\n                children: \"audiogram\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 18,\n                columnNumber: 62\n              }, this), \". An audiogram is a graph that shows the softest sounds a person can hear at different frequencies, for each ear. Namely, it presents the frequencies and decibels that you were able to hear. Frequency, or pitch, is in Hz, and decibel (dB) is a relative volume measurement. Where these values fall on the audiogram will indicate the degree of hearing loss that you could have. Marks closer to the bottom of this graph indicate that softer tones were heard (lower dB). The different variations of results you could receive are normal, slight, mild, moderate, moderately-severe, severe, or profound.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"What Should I Do Next?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"If your results indicate that your hearing is normal, most likely, no further actions are necessary. However, if your results reveal that you may have hearing loss, we will provide resources that will allow you to learn more about hearing loss, or to purchase a hearing aid.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nfunction LineChart(props) {\n  let level = getLevel(props.testResults);\n  let data = {\n    labels: labels,\n    datasets: [{\n      label: 'Right Ear',\n      data: getData(props.testResults[0].hertz, true),\n      backgroundColor: \"rgba(4, 157, 217, .5)\",\n      borderColor: \"rgba(4, 157, 217, .5)\"\n    }, {\n      label: 'Left Ear',\n      data: getData(props.testResults[1].hertz, false),\n      backgroundColor: \"rgba(102, 255, 173, 0.5)\",\n      borderColor: \"rgba(102, 255, 173, 0.5)\"\n    }, {\n      label: 'Both Ears',\n      backgroundColor: \"rgba(104,205,214,255)\",\n      borderColor: \"rgba(104,205,214,255)\"\n    }]\n  };\n  let options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Your Audiogram'\n      }\n    },\n    scales: {\n      xAxes: {\n        title: {\n          display: true,\n          text: 'Frequency Level (Hz)'\n        }\n      },\n      yAxes: {\n        title: {\n          display: true,\n          text: 'Minimum Decibel You Heard (dB)'\n        },\n        min: 0,\n        max: 80,\n        ticks: {\n          stepsize: 5\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      align: \"center\",\n      children: [\" You have \", level, \" hearing loss\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: data,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 7\n  }, this);\n}\n\n_c = LineChart;\n\nfunction getLevel(results) {\n  let max = 0;\n  let level = '';\n\n  for (let i = 0; i < 2; i++) {\n    for (let key in results[i].hertz) {\n      if (results[i].hertz[key].minThres > max) {\n        max = results[i].hertz[key].minThres;\n      }\n    }\n  }\n\n  if (max <= 20) {\n    level = \"NORMAL\";\n  } else if (max <= 40) {\n    level = \"MILD\";\n  } else if (max <= 55) {\n    level = \"MODERATE\";\n  } else if (max <= 70) {\n    level = \"MODERATELY SEVERE\";\n  } else {\n    level = \"SEVERE TO PROFOUND\";\n  }\n\n  return level;\n}\n\nfunction getData(results, right) {\n  let newData = [];\n\n  for (let key in results) {\n    if (results[key].minThres === 100) {\n      newData.push({\n        x: results[key].hzLevel,\n        y: 75\n      });\n    } else {\n      newData.push({\n        x: results[key].hzLevel,\n        y: results[key].minThres\n      });\n    }\n  }\n\n  if (right) {\n    newData = newData.splice(1);\n  }\n\n  return newData;\n}\n\nexport default Results;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"sources":["/Users/michelleponting/Desktop/hearingtest/webpage/src/components/hearingtest/hearingscreening/screening_routes/Results.js"],"names":["React","Component","Line","labels","Results","render","props","testResults","LineChart","level","getLevel","data","datasets","label","getData","hertz","backgroundColor","borderColor","options","responsive","plugins","legend","position","title","display","text","scales","xAxes","yAxes","min","max","ticks","stepsize","results","i","key","minThres","right","newData","push","x","hzLevel","y","splice"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Line } from 'react-chartjs-2';\n\nconst labels = [0, 500, 1000, 2000, 4000, 6000];\n\nclass Results extends Component {\n   render() {\n      return (\n         <main className=\"container-fluid\">\n            <div className=\"row\">\n               <div className=\"col-lg-6\">\n                  <LineChart testResults={this.props.testResults} />\n               </div>\n               <div className=\"col-lg\">\n                  <div className=\"row\">\n                     <h4>What Do My Results Mean?</h4>\n                     <p>Note that your results are not a medical diagnosis of your hearing levels, but they can provide information about your hearing levels that could encourage you to schedule an appointment with an audiologist. </p>\n                     <p>Your results will be displayed as an <span className=\"font-weight-bold\">audiogram</span>. An audiogram is a graph that shows the softest sounds a person can hear at different frequencies, for each ear. Namely, it presents the frequencies and decibels that you were able to hear. Frequency, or pitch, is in Hz, and decibel (dB) is a relative volume measurement. Where these values fall on the audiogram will indicate the degree of hearing loss that you could have. Marks closer to the bottom of this graph indicate that softer tones were heard (lower dB). The different variations of results you could receive are normal, slight, mild, moderate, moderately-severe, severe, or profound.</p>\n                  </div>\n                  <div className=\"row\">\n                     <h4>What Should I Do Next?</h4>\n                     <p>If your results indicate that your hearing is normal, most likely, no further actions are necessary. However, if your results reveal that you may have hearing loss, we will provide resources that will allow you to learn more about hearing loss, or to purchase a hearing aid.</p>\n                  </div>\n               </div>\n            </div>\n            <div className=\"row\">\n            </div>\n         </main>\n      );\n    }\n}\n\nfunction LineChart(props) {\n   let level = getLevel(props.testResults);\n   let data = {\n      labels: labels,\n      datasets: [\n         {\n            label: 'Right Ear',\n            data: getData(props.testResults[0].hertz, true),\n            backgroundColor: \"rgba(4, 157, 217, .5)\",\n            borderColor: \"rgba(4, 157, 217, .5)\"\n         },\n         {\n            label: 'Left Ear',\n            data: getData(props.testResults[1].hertz, false),\n            backgroundColor: \"rgba(102, 255, 173, 0.5)\",\n            borderColor: \"rgba(102, 255, 173, 0.5)\"\n         },\n         {\n            label: 'Both Ears',\n            backgroundColor: \"rgba(104,205,214,255)\",\n            borderColor: \"rgba(104,205,214,255)\"\n         }\n      ]\n   };\n\n   let options = {\n\n      responsive: true,\n      plugins: {\n         legend: {\n            position: 'top',\n         },\n         title: {\n            display: true,\n            text: 'Your Audiogram'\n         }\n      },\n      scales: {\n         xAxes: {\n            title: {\n               display: true,\n               text: 'Frequency Level (Hz)'\n            }\n         },\n         yAxes: {\n            title: {\n               display: true,\n               text: 'Minimum Decibel You Heard (dB)'\n            },\n            min: 0,\n            max: 80,\n            ticks: {\n               stepsize: 5\n            }\n         }\n      }\n\n   };\n\n   return (\n      <div>\n         <h2 align='center'> You have {level} hearing loss</h2>\n\n         <div>\n            <Line data={data} options={options} />\n         </div>\n      </div>\n   );\n}\n\nfunction getLevel(results) {\n   let max = 0;\n   let level = '';\n   for (let i = 0; i < 2; i++) {\n      for (let key in results[i].hertz) {\n         if (results[i].hertz[key].minThres > max) {\n            max = results[i].hertz[key].minThres;\n         }\n      }\n   }\n   if (max <= 20) {\n      level = \"NORMAL\";\n   } else if (max <= 40) {\n      level = \"MILD\"\n   } else if (max <= 55) {\n      level = \"MODERATE\"\n   } else if (max <= 70) {\n      level = \"MODERATELY SEVERE\"\n   } else {\n      level = \"SEVERE TO PROFOUND\"\n   }\n   return level;\n}\n\nfunction getData(results, right) {\n   let newData = [];\n   for (let key in results) {\n      if (results[key].minThres === 100) {\n         newData.push({ x: results[key].hzLevel, y: 75 });\n      } else {\n         newData.push({ x: results[key].hzLevel, y: results[key].minThres });\n      }\n   }\n   if (right) {\n      newData = newData.splice(1);\n   }\n   return newData;\n}\n\n\nexport default Results;"]},"metadata":{},"sourceType":"module"}